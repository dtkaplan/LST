[{"path":"https://dtkaplan.github.io/LSTbook/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 LSTbook authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/articles/DAGs.html","id":"basics-of-datasim_make","dir":"Articles","previous_headings":"","what":"Basics of datasim_make()","title":"Simulating data with Directed Acyclic Graphs","text":"rules simulation written syntax ordinary R statement. Within one simulation objects, rule must unique name. example, x <- rnorm(n, mean=0, sd=2), perfectly ordinary R statement, storing name x rule rnorm(n, mean=0, sd=2). datasim_make() function; simulation rules given arguments function, , parentheses separated commas. three aspects using datasim_make() entirely ordinary. First, name given rules using storage arrow (<-) opposed usual = syntax named arguments. Using = generate error, like . Second, quantity n need defined previously; defined sampling phase. Third, rule may make use name (like x) name used previous rule. instance, second rule Example1 y <- -3 + 10 * x uses x defined first rule. rules, unique name, can added make use x y. set rules collected using datasim_make(), simulation can run many times like.","code":"Wrong_way <- datasim_make(x = rnorm(n, mean=0, sd=2)) # don't use = #> Error in datasim_make(x = rnorm(n, mean = 0, sd = 2)): Use the storage arrow `<-` (not the equation sign `=`) in arguments to datasim_make(). Example1 |> sample(n = 3) #> # A tibble: 3 × 2 #>        x      y #>    <dbl>  <dbl> #> 1  2.86   24.6  #> 2 -2.93  -36.6  #> 3 -0.473  -7.44 Example1 |> sample(n = 2) #> # A tibble: 2 × 2 #>       x     y #>   <dbl> <dbl> #> 1 -1.64 -20.2 #> 2 -4.10 -40.5 # and so on"},{"path":"https://dtkaplan.github.io/LSTbook/articles/DAGs.html","id":"pre-defined-simulations","dir":"Articles","previous_headings":"","what":"Pre-defined simulations","title":"Simulating data with Directed Acyclic Graphs","text":"Although students instructors may create simulations using datasim_make(), want get started using pre-defined simulations come {LST} package. named prefix sim_, sim_00, sim_01, …, sim_12, sim_vaccine, . two ways see rules predefined simulations. Print rules, e.g. Draw graph connections rules, e.g. dag_04 rule d receives inputs , b, c, none rules connected one another.  term mathematical graphs corresponding data simulation rules “directed acyclic graph” (DAG, short).","code":"print(sim_04) # One of the simulations in {LST} #> $names #> $names[[1]] #> a #>  #> $names[[2]] #> b #>  #> $names[[3]] #> c #>  #> $names[[4]] #> d #>  #>  #> $calls #> $calls[[1]] #> rnorm(n) #>  #> $calls[[2]] #> rnorm(n) #>  #> $calls[[3]] #> rnorm(n) #>  #> $calls[[4]] #> a + b + c + rnorm(n) #>  #>  #> attr(,\"class\") #> [1] \"list\"    \"datasim\" dag_draw(sim_04)"},{"path":"https://dtkaplan.github.io/LSTbook/articles/DAGs.html","id":"introducing-causality","dir":"Articles","previous_headings":"","what":"Introducing causality","title":"Simulating data with Directed Acyclic Graphs","text":"rules data simulation form network; variables depend others. mathematics, networks often represented graphs, , systems nodes edges connecting nodes. data simulations, rule specifies inputs () right-hand side <- inputs specify value variable named left-hand side <-. words, data simulations correspond mathematical idea directed graph. directed graphs admissible. instance, following statement attempts make simulation two variables, sets values . mathematically oriented reader may tempted interpret set differential equation, instance similar looking \\[\\frac{dx}{dt} = y, \\ \\frac{dy}{dt} = -x\\]. differential equation legitimate mathematical object solutions, \\(x(t)\\) \\(y(t)\\). differential equation, \\(y\\) clearly influences \\(x\\) vice versa. , precise, present$ value \\(x\\) influences future values* \\(y\\). (R functions pertaining differential equations, see mosaicCalc package, related {LST} authorship affiliation [Project MOSAIC]{https://www.mosaic-web.org/}.) data simulation, contrast, rows output data independent realizations simulation rules. instance, sim_04 (graphed ), row value generated autonomously (“exogenously”), values b c. d variable row arithmetic sum + b + c bit exogenous noise added well. problem proposed simulation cycle find x row, must first know y, find y row, must already know x. order avoid impossible situation cycle data simulation, successive rule can depend rules come . network called acyclic: without cycles. Consequently, data simulations correspond Directed Acyclic Graphs (DAGs). may know, DAGs play important role statistical causal inference. Consequently, DAGs important theme Lessons Statistical Thinking. Data simulations can useful teaching causal concepts. illustrate, consider sim_vaccine simulation provided {LST} package. simulation cartoon flu vaccinations might reduce mortality flu. can look sim_vaccine usual ways:  judge graph, shows arrows, connections among four variables involved simulation. good starting point classroom discussion four variables might connected real world. Different people different opinions , example, “vaccine deniers” might insist vaccination causes health deteriorate. person touch medical science see vaccination effects chances getting flu, depending person’s health person flu likely die. can run simulation model resulting data see data show connections among four variables. instance, ’s easy simulate study 10,000 participants whose baseline health measured observed: get vaccinated, get flu, die? Modeling data helps us address questions interest. instance, vaccination associated reduced odds getting flu? negative coefficient vaccinated indicates vaccination (simulation) associated lower odds getting flu. Similarly, getting flu associated dieing: positive coefficient flu demonstrates association: getting flu means larger odds dieing. might wonder associations formed among variables simulation graph edges connecting . can write simulation verify unconnected variables almost always produce confidence interval includes zero. 5% simulation runs result confidence interval including zero. runs lead Type errors. reason associations seen sim_vaccine data fact connections, involve variables simulation aren’t reported data, called “lurking” variables. Unlike real world, simulation can look variables  variables health, vaccinated, flu, died merely readouts internal variables .h, .v, .f .s. Dots starting variable name keeps variables hidden, revealed report_hidden = TRUE argument. hidden variables nest connections. example, better health (.h) makes vaccination (.v) likely. generate simulated data includes hidden variables, use report_hidden=TRUE argument sample(). proper clinical trial, vaccination assigned random, maybe even blocked respect health, age, …. stands, sim_vaccine observational study. create randomized clinical trial—, experiment—need intervene set .v. can done datasim_intervene() function, allows us specify new rules modify existing ones. Like :  Note graph RCTdiffers graph sim_vaccine: now direct connection health variable vaccination. Generating data randomized clinical trial modeling connections flu variable (.f) vaccinated variable (.v) shows much smaller connection vaccination flu seen observational data generated sim_vaccine. course, sim_vaccine just simulation may accord things work real world. real world like sim_vaccine, able untangle confounded connections running experiment. untangling can also done appropriate choice covariates model.","code":"cycle <- datasim_make(x <- y, y <- -x) #> Error in igraph::topo_sort(datasim_to_igraph(sim, report_hidden = TRUE)): At core/properties/dag.c:114 : The graph has cycles; topological sorting is only possible in acyclic graphs, Invalid value print(sim_vaccine) #> $names #> $names[[1]] #> .h #>  #> $names[[2]] #> .v #>  #> $names[[3]] #> .f #>  #> $names[[4]] #> .s #>  #> $names[[5]] #> died #>  #> $names[[6]] #> vaccinated #>  #> $names[[7]] #> health #>  #> $names[[8]] #> flu #>  #>  #> $calls #> $calls[[1]] #> rnorm(n, sd = 1) #>  #> $calls[[2]] #> 0.2 + 2 * .h + rnorm(n, sd = 0.25) #>  #> $calls[[3]] #> -0.5 - 0.5 * bernoulli(logodds = .v) - 1 * .h #>  #> $calls[[4]] #> 2 - 0.2 * bernoulli(logodds = .f) + 0.4 * (.h + 0.5) #>  #> $calls[[5]] #> bernoulli(logodds = .s, labels = c(\"yes\", \"no\")) #>  #> $calls[[6]] #> bernoulli(logodds = .v, labels = c(\"none\", \"yes\")) #>  #> $calls[[7]] #> bernoulli(logodds = .h, labels = c(\"poor\", \"good\")) #>  #> $calls[[8]] #> bernoulli(logodds = .f) #>  #>  #> attr(,\"class\") #> [1] \"list\"    \"datasim\" dag_draw(sim_vaccine) sim_data <- sim_vaccine |> sample(n = 10000) sim_data |> model_train(flu ~ vaccinated) |> conf_interval() #> Waiting for profiling to be done... #> # A tibble: 2 × 4 #>   term             .lwr   .coef    .upr #>   <chr>           <dbl>   <dbl>   <dbl> #> 1 (Intercept)   -0.0933 -0.0361  0.0210 #> 2 vaccinatedyes -1.35   -1.26   -1.18 sim_data |> model_train(zero_one(died, one=\"yes\") ~ flu) |> conf_interval() #> Waiting for profiling to be done... #> # A tibble: 2 × 4 #>   term          .lwr  .coef   .upr #>   <chr>        <dbl>  <dbl>  <dbl> #> 1 (Intercept) -2.21  -2.13  -2.05  #> 2 flu          0.177  0.302  0.426 print(sim_vaccine, report_hidden = TRUE) #> $names #> $names[[1]] #> .h #>  #> $names[[2]] #> .v #>  #> $names[[3]] #> .f #>  #> $names[[4]] #> .s #>  #> $names[[5]] #> died #>  #> $names[[6]] #> vaccinated #>  #> $names[[7]] #> health #>  #> $names[[8]] #> flu #>  #>  #> $calls #> $calls[[1]] #> rnorm(n, sd = 1) #>  #> $calls[[2]] #> 0.2 + 2 * .h + rnorm(n, sd = 0.25) #>  #> $calls[[3]] #> -0.5 - 0.5 * bernoulli(logodds = .v) - 1 * .h #>  #> $calls[[4]] #> 2 - 0.2 * bernoulli(logodds = .f) + 0.4 * (.h + 0.5) #>  #> $calls[[5]] #> bernoulli(logodds = .s, labels = c(\"yes\", \"no\")) #>  #> $calls[[6]] #> bernoulli(logodds = .v, labels = c(\"none\", \"yes\")) #>  #> $calls[[7]] #> bernoulli(logodds = .h, labels = c(\"poor\", \"good\")) #>  #> $calls[[8]] #> bernoulli(logodds = .f) #>  #>  #> attr(,\"class\") #> [1] \"list\"    \"datasim\" dag_draw(sim_vaccine, report_hidden = TRUE) Randomized_trial_sim <- datasim_intervene(sim_vaccine, .v <- c(-5, 5)) dag_draw(Randomized_trial_sim, report_hidden = TRUE) RTdata <- Randomized_trial_sim |> sample(n=10000, report_hidden = TRUE) RTdata |> model_train(.f ~ .v + .h) |> conf_interval() #> # A tibble: 3 × 4 #>   term           .lwr   .coef    .upr #>   <chr>         <dbl>   <dbl>   <dbl> #> 1 (Intercept) -0.751  -0.750  -0.749  #> 2 .v          -0.0496 -0.0495 -0.0493 #> 3 .h          -1.00   -1.00   -0.999"},{"path":"https://dtkaplan.github.io/LSTbook/articles/DAGs.html","id":"sec-why-datasim","dir":"Articles","previous_headings":"","what":"Why datasim_make()?","title":"Simulating data with Directed Acyclic Graphs","text":"Many textbooks use R simulations arrange code sequence R statements. instance, simulation Example1 shown start document written three statements. approach viable terms numbers generated x y, several shortcomings. variables assembled data frame, graphing, summarizing, modeling variables done accordingly. name simulation , referring simulation comparing simulations different rules awkward. Repeated runs simulation tedious book-keeping done hand. Analyzing rules draw DAG check cycles easy. datasim_make() sample() avoids problems small minimum extra code, seen Example1.","code":"n <- 100 x <- rnorm(n, mean = 0, sd = 2)  y <- -3 + 10 * x + rnorm(n, mean = 0, sd = 5)"},{"path":"https://dtkaplan.github.io/LSTbook/articles/DAGs.html","id":"functions-for-simulation-rules","dir":"Articles","previous_headings":"","what":"Functions for simulation rules","title":"Simulating data with Directed Acyclic Graphs","text":"Many rules simulation can expressed mainstream R code. example, random numbers can generated rnorm(), rexp(), rbinom(), many functions provided {stats} package packages. Similarly, arithmetic mathematical operations can written ordinary way. convenient, however, use special functions provided {LST} writing simulations. functions simplify common situations simulations. categorical() generates specified categorical levels random. ’ll give examples using n = 10 default, level equally likely occur. can specify probabilities directly using argument notation: bernoulli() generates zero-one variables two-level categorical variables. simple default make 0 1 equal probability. can provide labels zero one, producing categorical variable: bernoulli() can also generate outcomes depend variables, using variables either log-odds inputs probability [0,1] inputs. See sim_vaccine presented examples. cat2value() Sometimes want use categorical variable input translate numerical values output , instance, specify log-odds bernoulli(). don’t need vals elsewhere simulation, can combine two statements one: block_by() assigns categorical levels randomly, arranged blocks defined variable. Using rules datasim_make() facilitates running simulation multiple times packing simulation’s data data frame. illustrate, ’s hard see treatment variable alone blocked color. data data frame, can use wrangling modeling reveal patterns. (Don’t forget commas rules! rule argument datasim_make().) data frame, can see treatments assigned evenly possible colors. mix_with() mix noise signal output specified R2 variance. noise mixed signal may incidentally correlated signal. leads R2 varying around specified value. can avoid variation (necessarily want ) providing optional argument exact = TRUE.","code":"n <- 10 color <- categorical(n, \"red\", \"blue\", \"green\") color #>  [1] \"red\"   \"blue\"  \"blue\"  \"red\"   \"green\" \"red\"   \"green\" \"green\" \"blue\"  #> [10] \"red\" color <- categorical(n, red = .1, blue = .2, green = .7) color #>  [1] \"green\" \"green\" \"green\" \"green\" \"green\" \"green\" \"green\" \"blue\"  \"red\"   #> [10] \"blue\" flip <- bernoulli(n) flip #>  [1] 0 0 1 0 0 1 0 1 1 1 flip <- bernoulli(n, labels = c(\"bad\", \"good\")) flip #>  [1] \"bad\"  \"good\" \"good\" \"good\" \"bad\"  \"good\" \"bad\"  \"bad\"  \"bad\"  \"good\" vals <- cat2value(flip, good = 2, bad = -1 ) vals #>  [1] -1  2  2  2 -1  2 -1 -1 -1  2 result <- bernoulli(logodds = vals, labels = c(\"fail\", \"succeed\")) result #>  [1] \"fail\"    \"fail\"    \"succeed\" \"succeed\" \"fail\"    \"succeed\" \"fail\"    #>  [8] \"succeed\" \"fail\"    \"fail\" result <- bernoulli(logodds = cat2value(flip, good=2, bad = -1)) result #>  [1] 1 0 1 1 0 1 1 0 0 1 treatment <- block_by(color, levels = c(\"glue\", \"nails\", \"screws\")) treatment #>  [1] \"glue\"   \"screws\" \"glue\"   \"nails\"  \"glue\"   \"screws\" \"nails\"  \"screws\" #>  [9] \"glue\"   \"nails\" all_together <- datasim_make(   color <- categorical(n, red = .1, blue = .2, green = .7),   flip <- bernoulli(n, labels = c(\"bad\", \"good\")),   result <- bernoulli(logodds = cat2value(flip, good=2, bad = -1)),   treatment <- block_by(color, levels = c(\"glue\", \"nails\", \"screws\")) ) all_together |> sample(n = 20) |> arrange(color) #> # A tibble: 20 × 4 #>    color flip  treatment result #>    <chr> <chr> <chr>      <dbl> #>  1 blue  bad   glue           0 #>  2 blue  good  nails          1 #>  3 blue  good  screws         1 #>  4 blue  bad   screws         0 #>  5 green good  glue           1 #>  6 green bad   nails          0 #>  7 green bad   glue           0 #>  8 green good  screws         1 #>  9 green good  nails          0 #> 10 green bad   glue           1 #> 11 green bad   nails          1 #> 12 green bad   screws         0 #> 13 green good  glue           1 #> 14 green good  nails          1 #> 15 green bad   screws         0 #> 16 green good  screws         1 #> 17 green good  nails          1 #> 18 green bad   glue           0 #> 19 red   bad   nails          0 #> 20 red   good  glue           1 Mix_them <- datasim_make(   x <- rnorm(n),   y <- mix_with(x, R2 = 0.71, var = 4.35) ) Dat <- Mix_them |> sample(n = 100) Dat |> model_train(y ~ x) |> R2() #>     n k  Rsquared        F     adjR2 p df.num df.denom #> 1 100 1 0.7595083 309.4984 0.7570543 0      1       98 Dat |> summarize(var(y)) #> # A tibble: 1 × 1 #>   `var(y)` #>      <dbl> #> 1     4.35"},{"path":"https://dtkaplan.github.io/LSTbook/articles/DAGs.html","id":"doubly-stochastic-processes","dir":"Articles","previous_headings":"","what":"Doubly stochastic processes","title":"Simulating data with Directed Acyclic Graphs","text":"many situations conditions random outcome set random. bernoulli() process provides illustration. Suppose outcome ill-vs-healthy determined random, patient’s general health condition sets probability falling ill. instance:  hallmark processes n argument isn’t needed; number random values produced determined length input variable, case health. bernoulli() written specially achieve behavior. ’s helpful mechanism enable doubly stochastic behavior. instance, suppose want generate k random positive integer based k, another variable y sum k normal processes. ’s tempting try write follows: hasn’t performed might expected. supposedly random y values . reason can seen documentation rnorm(). n argument rnorm() vector—k vector length n = 5 sample generated—length vector determines number random numbers generated. Consequently, sum(rnorm(k)) simple sum n random numbers, rather n sums varying number random numbers. () function sets things separate calculation done n rows sample. calculation draws values variables particular row. illustrate: need bigger sample see k dependence y:","code":"Sick_sim <- datasim_make(   health <- rnorm(n, sd=2),    sick   <- bernoulli(logodds = health, labels = c(\"ill\", \"OK\")) ) Sim_dat <- Sick_sim |> sample(n = 1000) Sim_dat |> point_plot(sick ~ health) # This won't work! sum_sim <- datasim_make(   k <- sample(c(1, 4, 16, 32, 64, 128), n = n, replace = TRUE),   y <- sum(rnorm(k)) ) sum_sim |> sample(n = 5) #> # A tibble: 5 × 2 #>       k     y #>   <dbl> <dbl> #> 1   128  2.37 #> 2     1  2.37 #> 3     4  2.37 #> 4    64  2.37 #> 5    32  2.37 # This will do what we want! sum_sim <- datasim_make(   k <- sample(c(1, 4, 16, 32, 64, 128), n = n, replace = TRUE),   y <- each(sum(rnorm(k))) ) sum_sim |> sample(n = 5) #> # A tibble: 5 × 2 #>       k      y #>   <dbl>  <dbl> #> 1     4 -1.32  #> 2    32 14.9   #> 3    32  0.862 #> 4    64 -2.63  #> 5    16  1.39 sum_sim |> sample(n = 10000) |>   point_plot(y ~ k, point_ink = 0.1)"},{"path":"https://dtkaplan.github.io/LSTbook/articles/LSTbook.html","id":"sec-template","dir":"Articles","previous_headings":"","what":"A command template","title":"{LST}: R package for *Lessons in Statistical Thinking*","text":"R commands Lessons well exemplified following: generating plot two variables data frame annotating plot simple linear model.  command illustrates several features style commands Lessons: basic structure involves piping data frame function. pipeline structure used almost exclusively Lessons. reader acquainted R pipe, object left-hand side pipe token |> becomes first argument function call right-hand side. left-hand side pipe—input end pipe–often data frame, handful types used role Lessons. (later.) right-hand side—output end pipe–always function call. Variables data frame referred unquoted name. variable names used role un-piped argument right-hand side function call. $ notation never used setting. situations response variable (modeling graphics), variable names always appear tilde expressions. Often, tilde expression thing inside parentheses follow function name. sometimes additional details function added within parentheses. example command, detail add statistical model annotation specified argument `annot = “model”. point_plot() omnibus graphics command sufficient teaching entire statistics course includes inference covariation. output ggplot2 compatible. omnibus commands {LST} seen Lessons model_train(), sample(), trials(). Wrangling functions dplyr also occasionally used, especially mutate() summarize(). Summaries statistical models made {LST} function conf_interval() occasionally R2(). (Near end course, regression_summary() anova_summary() introduced, play minor, optional role course.)","code":"mtcars |> point_plot(mpg ~ hp, annot = \"model\")"},{"path":"https://dtkaplan.github.io/LSTbook/articles/LSTbook.html","id":"sec-input-end","dir":"Articles","previous_headings":"","what":"Pipe input-ends","title":"{LST}: R package for *Lessons in Statistical Thinking*","text":"’m using term input end pipe refer object left-hand side |> pipe token. handful types presented input end pipe: data frame far common input type. statistical model input type used frequently second-half course. “data simulation” another kind input type. Optionally, mainly enrichment, data graphic frame (produced point_plot()) used input pipe towards command add labels add another ggplot2 layer.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/articles/LSTbook.html","id":"sec-output-end","dir":"Articles","previous_headings":"","what":"Pipe output-ends","title":"{LST}: R package for *Lessons in Statistical Thinking*","text":"Just input end refers object provided left-hand side pipe, object produced function call right side pipe’s output. Two essential points pipe output-ends: R command given right-hand side |> always function call. exceptions. function call consists name function (e.g., point_plot model_train) followed open/closed pair parentheses. Usually, something tilde expression contained parentheses, often additional named arguments annot = \"model\" example command presented @sec-command-template. function call () produces R object. {LST} functions, object always one four types presented previous section (data frame, model, data simulation, graphics frame).","code":""},{"path":"https://dtkaplan.github.io/LSTbook/articles/LSTbook.html","id":"multi-stage-pipelines","dir":"Articles","previous_headings":"","what":"Multi-stage pipelines","title":"{LST}: R package for *Lessons in Statistical Thinking*","text":"object produced function call output end pipe |> can provide input, via another pipe, another function call. technique often used data wrangling summarizing model. instance, following converts fuel “economy” (mpg) fuel consumption (liters per 100 km), used response variable model. convenience, add_plot_labels() function modify labels plot, taking input plot (produced point_plot(), instance) returning output modified plot. (Perhaps interest familiar ggplot2 … add_plot_labels() merely wrapper ggplot2::labs() avoids non-standard + pipe system.)","code":"mtcars |>    dplyr::mutate(consumption = 235.2 / mpg) |>   model_train(consumption ~ hp + wt) |>    conf_interval() #> # A tibble: 3 × 4 #>   term            .lwr  .coef   .upr #>   <chr>          <dbl>  <dbl>  <dbl> #> 1 (Intercept) -0.486   1.48   3.45   #> 2 hp           0.00647 0.0176 0.0287 #> 3 wt           1.92    2.70   3.48 mtcars |>    point_plot(mpg ~ hp * wt) |>    add_plot_labels(x = \"Engine power (hp)\", y = \"Fuel economy (mpg)\")"},{"path":"https://dtkaplan.github.io/LSTbook/articles/LSTbook.html","id":"what-to-do-with-the-ultimate-output-of-a-pipeline","dir":"Articles","previous_headings":"","what":"What to do with the ultimate output of a pipeline?","title":"{LST}: R package for *Lessons in Statistical Thinking*","text":"flow computation pipeline runs left right. output object last stage pipeline , default, printed. alternative store output object name, using “storage arrow”, like : storage_name <- pipeline R, form object printed controlled programmer. Graphics typically “printed” displaying graphic appropriate place. Data frames typically printed text. addition data frames graphics, Lessons deals frequently two sorts objects: data simulations models. default, models printed text. wide variety formats corresponding large number people communally put together modeling systems R. Rather hodge-podge printed model formats, encourage users print specific summaries models graphs model function (use model_plot()). numerical model summaries {LST} always printed data-frame format. time Lessons, models summarized coefficients confidence intervals, format produced conf_interval(). strongly recommend model coefficients always shown context confidence interval; conf_interval() imposes policy. Another sometimes useful format summary provided R2(). Toward end course, ANOVA generalization R2 introduced. anova_summary() useful comparing two models. regression_summary() shows standard regression report, conf_interval() , think, superior format. (feel obliged show p-value, use show_p = TRUE argument conf_interval(). recommend focussing whether confidence interval includes zero, using level = argument aren’t happy 0.05.) Data simulations printed text showing causal formulas relating one variable others. Like : Instructions constructing data simulations given Simulating data Directed Acyclic Graphs vignette package. Many pre-built simulations provided {LST} package. New ones can constructed using datasim_make(). Except straightforward cases, construction instructor-level task.","code":"sim_06 #> $names #> $names[[1]] #> a #>  #> $names[[2]] #> b #>  #> $names[[3]] #> c #>  #> $names[[4]] #> d #>  #>  #> $calls #> $calls[[1]] #> rnorm(n) #>  #> $calls[[2]] #> a + rnorm(n) #>  #> $calls[[3]] #> b + rnorm(n) #>  #> $calls[[4]] #> c + a + rnorm(n) #>  #>  #> attr(,\"class\") #> [1] \"list\"    \"datasim\""},{"path":"https://dtkaplan.github.io/LSTbook/articles/LSTbook.html","id":"trials-and-the-pipe","dir":"Articles","previous_headings":"","what":"Trials and the pipe","title":"{LST}: R package for *Lessons in Statistical Thinking*","text":"popular feature mosaic package () function, provides syntax logic repeating command multiple times, accumulating results data frame. instance: {LST} updated functionality take advantage R built-pipe notation style arranging model summaries data frames. functionality provided trials() function. use , place trials() end pipeline: can, course, take data frame produced trials() use later wrangling graphics. ’s natural think pipeline leading trials() stage creating single output. trials() seemingly magical ability grab whole pipeline run . (“magic” provided “non-standard evaluation” facilities R, advanced programming construct.) excellent way develop statement repeated: write pipeline excluding final trials() stage. time run truncated pipeline, receive one object. object format seek, add final trials() stage back .","code":"mosaic::do(3) * sum(runif(5)) mtcars |>    sample(replace = TRUE) |> # resampling here!   model_train(mpg ~ hp) |>    conf_interval() |>    filter(term == \"hp\") |>   trials(5)  #>   .trial term        .lwr       .coef        .upr #> 1      1   hp -0.05884886 -0.04350439 -0.02815991 #> 2      2   hp -0.07123911 -0.05567061 -0.04010210 #> 3      3   hp -0.10945900 -0.08387168 -0.05828437 #> 4      4   hp -0.11131359 -0.08981114 -0.06830869 #> 5      5   hp -0.08612844 -0.06705820 -0.04798795"},{"path":"https://dtkaplan.github.io/LSTbook/articles/LSTbook.html","id":"graphics-in-lst","dir":"Articles","previous_headings":"","what":"Graphics in {LST}","title":"{LST}: R package for *Lessons in Statistical Thinking*","text":"Instructors may feel obliged convention introduce menagerie plotting modalities, bar charts, line charts, histograms, etc. Lessons written use single primary graphic modality: point plot (.k.. “scatter plot”) produced point_plot(). Three modalities—confidence intervals, confidence bands, violin plots density—provided annotation feature point_plot(). annot = \"violin\" \"annot = \"model\". output point_plot() ggplot2 graphical object. Consequently, can use various ggplot2 functions set graphics theme, label axes, . Unfortunately, ggplot2 functions use + pipe rather |>. can confusing frustrating students. recommend use ggformula package re-packages ggplot2 facilities way can used R pipe |> employe tilde-expressions specifying response explanatory variables.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/articles/LSTbook.html","id":"lst-mosaic-and-ggformula","dir":"Articles","previous_headings":"","what":"{LST}, {mosaic}, and {ggformula}","title":"{LST}: R package for *Lessons in Statistical Thinking*","text":"MOSAIC suite packages—including mosaic ggformula—widely used teaching statistics R. Many pedagogical principles behind {LST} shared mosaic ggformula. course welcome use mosaic ggformula along {LST}, particularly want teach graphics modalities provided LST::point_plot(). shared pedagogical principles, connection {LST} either mosaic ggformula. One reason pipe |>, prominently features Lessons. mosaic pipe-ready many functions require data = argument. Another reason concerns recent developments deploying R computing via web pages. system provides within--web-page R computing yet compatible mosaic ggformula. {LST} work R embedded web pages, {LST} make use mosaic/ggformula. situation may change future, point {LST} able acknowledge aunts uncles.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/articles/modeling.html","id":"using-model_train","dir":"Articles","previous_headings":"","what":"Using model_train()","title":"Training models","text":"model_train() wrapper around commonly used model-fitting functions {stats} package, particularly lm() glm(). ’s worth explaining motivation introducing new model-fitting function. model_train() pipeline ready. Example: Galton |> model_train(height ~ mother) model_train() internal logic figure automatically type model (e.g. linear, binomial, poisson) fit. (can also specify family= argument.) automatic nature model_train() means, e.g., can use neophyte students logistic regression without introduce new function. model_train() saves copy training data attribute model object produced. helpful plotting model, cross-validation, etc., particularly model specification involves nonlinear explanatory terms (e.g., splines::ns(mother, 3))","code":""},{"path":"https://dtkaplan.github.io/LSTbook/articles/modeling.html","id":"using-a-model-object","dir":"Articles","previous_headings":"","what":"Using a model object","title":"Training models","text":"examples, consider two models: modeling height (fully grown) child sex child, mother’s father’s height. Linear regression appropriate technique . modeling probability voter vote election (primary2006) given household size (hhsize), yearofbirth whether voter voted previous primary election (primary2004). Since voted yes proposition, logistic regression appropriate technique. Note zero_one() marks response variable candidate logistic regression. output model_train() format whichever {stats} package function used, e.g. lm() glm(). (training data stored “attribute,” meaning invisible.) Consequently, can use model object input whatever model-plotting summarizing function like. Lessons Statistical Thinking use {LST} functions plotting summarizing: model_plot() R2() conf_interval() Late Lessons, regression_summary() anova_summary() Let’s apply modeling examples introduced .   model_eval() function package allows provide inputs receive model output, prediction interval default. (logistic regression, confidence interval available.)","code":"height_model <- mosaicData::Galton |> model_train(height ~ sex + mother + father) vote_model <-    Go_vote |>    model_train(zero_one(primary2006, one = \"voted\") ~ yearofbirth * primary2004 * hhsize * yearofbirth ) height_model |> model_plot() height_model |> conf_interval() #> # A tibble: 4 × 4 #>   term         .lwr  .coef   .upr #>   <chr>       <dbl>  <dbl>  <dbl> #> 1 (Intercept) 9.95  15.3   20.7   #> 2 sexM        4.94   5.23   5.51  #> 3 mother      0.260  0.321  0.383 #> 4 father      0.349  0.406  0.463 vote_model |> model_plot() vote_model |> R2() #>        n k   Rsquared       F      adjR2 p df.num df.denom #> 1 305866 7 0.03799898 1725.91 0.03797696 0      7   305858 vote_model |> model_eval(yearofbirth=c(1960, 1980), primary2004=\"voted\", hhsize=4) #> Warning in model_eval(vote_model, yearofbirth = c(1960, 1980), primary2004 = #> \"voted\", : No prediction interval available. Using confidence interval. #>   yearofbirth primary2004 hhsize      .lwr   .output      .upr #> 1        1960       voted      4 0.4344150 0.4418285 0.4492680 #> 2        1980       voted      4 0.3016314 0.3128150 0.3242207"},{"path":"https://dtkaplan.github.io/LSTbook/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel Kaplan. Author, maintainer. Randall Pruim. Author.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kaplan D, Pruim R (2024). LSTbook: Data Software \"Lessons Statistical Thinking\". R package version 0.5.0, https://dtkaplan.github.io/LSTbook/.","code":"@Manual{,   title = {LSTbook: Data and Software for \"Lessons in Statistical Thinking\"},   author = {Daniel Kaplan and Randall Pruim},   year = {2024},   note = {R package version 0.5.0},   url = {https://dtkaplan.github.io/LSTbook/}, }"},{"path":"https://dtkaplan.github.io/LSTbook/index.html","id":"lstbook-an-r-package-for-lessons-in-statistical-thinking","dir":"","previous_headings":"","what":"Data and Software for ","title":"Data and Software for ","text":"LSTbook package provides software datasets Lessons Statistical Thinking.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Data and Software for ","text":"hope LSTbook available CRAN February 2024. meanwhile, can install development version LSTbook GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"dtkaplan/LSTbook\")"},{"path":"https://dtkaplan.github.io/LSTbook/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Data and Software for ","text":"LSTbook package developed help students instructors learn teach statistics early data science. LSTbook supports 2024 textbook Lessons Statistical Thinking, instructors may want use LSTbook even textbooks. statistics component Lessons may fairly called radical innovation. introductory, university-level course, Lessons gives students access important modern themes statistics including modeling, simulation, co-variation, causal inference. Data scientists, use data make genuine decisions, get tools need. includes complete rethinking statistical inference, starting confidence intervals early course, gently introducing structure Bayesian inference. coverage hypothesis testing greatly benefited discussions prompted American Statistical Association’s Statement P-values approached way , hope, appreciated sides debate. data-science part course includes concepts wrangling needed undertake statistical investigations (including data cleaning). based, might expect, tidyverse dplyr. readers may familiar mosaic suite packages provides, many students instructors, first framework statistical computation. many R developments since 2011 mosaic introduced. include pipes tidyverse style referring variables. mosaic uneasy equilibrium tidyverse. contrast, statistical functions LSTbook fit tidyverse style mesh well dplyr commands. LSTbook function set highly streamlined internally consistent. tight set four object types produced LSTbook computations: Data frames Graphic frames (ggplot2 compatible much streamlined) Models, summarized produce either data frames graphic frames. Data simulations (via DAGs) sampled produce data frames Vignettes provide instructor-level tutorial introduction LSTbook. student-facing introduction Lessons Statistical Thinking textbook.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/index.html","id":"statistics-for-data-science","dir":"","previous_headings":"","what":"Statistics for data science","title":"Data and Software for ","text":"Every instructor introductory statistics familiar textbooks devote separate chapters half-dozen basic tests: means, differences means, proportions, differences proportions, simple regression. ’s known century topics invoke statistical concepts. Moreover, merely precursors essential multivariable modeling techniques used mainstream data-science tasks dealing confounding. illustrate LSTbook supports teaching topics unified streamlined way, consider datasets provided mosaicData package: Galton, contains original data used Francis Galton 1880s study heritability genetic traits, specifically, human height; Whickham results 20-year follow-survey study smoking health. Start installing LSTbook described , loading R session: examples follow, use LSTbook function point_plot() handles numerical categorical variables using one syntax. ’s graphic looking difference two means.  Point plots can easily annotated models. illustrate difference two means, add model annotation:  point_plot() annotations violin bw. Lessons, models always graphed context underlying data shown confidence intervals. graphics modeling conventions apply categorical variables:  Simple regression works way:   syntax extends naturally handle inclusion covariates. example, simple calculation difference two proportions misleading; age, smoking status, plays primary role explaning mortality.  NOTE: highlight statistical inference, working n=200 sub-sample Galton: Quantitative modeling syntax, rather rely default R reports models, LSTbook offers concise summaries. help students develop deeper appreciation importance covariates, can turn data-generating simulations know rules behind data can check whether modeling reveals faithfully.  rules, can see y increases directly x, coefficient 1. simple model gets wrong: ’ll leave exercise reader see happens c included model covariate. Finally, advanced example ’s used demonstration illustrates flexibility unifying modeling, simulation, wrangling. ’ll calculate width x confidence interval function sample size n averaging 100 trials. ’ve used two trials show output trials(), increase , say, times = 100 finish wrangling dplyr function summarize(mean(width), .= sample_size).","code":"library(LSTbook) Galton |> point_plot(height ~ sex) Galton |> point_plot(height ~ sex, annot = \"model\") Whickham |> point_plot(outcome ~ smoker, annot = \"model\") Galton |> point_plot(height ~ mother, annot = \"model\") Whickham |> point_plot(outcome ~ age, annot = \"model\") Whickham |> point_plot(outcome ~ age + smoker, annot = \"model\") Galton <- Galton |> sample(n=100, .by = sex) Whickham |> model_train(outcome ~ age + smoker) |> conf_interval() #> Waiting for profiling to be done... #> # A tibble: 3 × 4 #>   term          .lwr  .coef   .upr #>   <chr>        <dbl>  <dbl>  <dbl> #> 1 (Intercept) -8.50  -7.60  -6.77  #> 2 age          0.110  0.124  0.138 #> 3 smokerYes   -0.124  0.205  0.537 print(sim_08) #> $names #> $names[[1]] #> c #>  #> $names[[2]] #> x #>  #> $names[[3]] #> y #>  #>  #> $calls #> $calls[[1]] #> rnorm(n) #>  #> $calls[[2]] #> c + rnorm(n) #>  #> $calls[[3]] #> x + c + 3 + rnorm(n) #>  #>  #> attr(,\"class\") #> [1] \"list\"    \"datasim\" dag_draw(sim_08) sim_08 |>    sample(n = 100) |>   model_train(y ~ x) |>   conf_interval() #> # A tibble: 2 × 4 #>   term         .lwr .coef  .upr #>   <chr>       <dbl> <dbl> <dbl> #> 1 (Intercept)  2.75  3.01  3.27 #> 2 x            1.14  1.32  1.51 sim_08 |>    sample(n = sample_size) |>   model_train(y ~ x) |>   conf_interval() |>   trials(times = 2, sample_size = c(100, 400, 1600, 6400, 25600)) |>    filter(term == \"x\") |>    mutate(width = .upr - .lwr) #>    .trial sample_size term     .lwr    .coef     .upr      width #> 1       1         100    x 1.372233 1.560350 1.748467 0.37623423 #> 2       2         100    x 1.332790 1.490733 1.648677 0.31588668 #> 3       1         400    x 1.421812 1.505607 1.589403 0.16759077 #> 4       2         400    x 1.499239 1.580337 1.661436 0.16219628 #> 5       1        1600    x 1.424356 1.466122 1.507888 0.08353176 #> 6       2        1600    x 1.436348 1.477919 1.519491 0.08314316 #> 7       1        6400    x 1.474246 1.494887 1.515529 0.04128310 #> 8       2        6400    x 1.487190 1.508327 1.529465 0.04227480 #> 9       1       25600    x 1.495289 1.505822 1.516355 0.02106636 #> 10      2       25600    x 1.498624 1.509280 1.519937 0.02131267 #>   sample_size mean(width) #> 1         100  0.34800368 #> 2         400  0.17059320 #> 3        1600  0.08483481 #> 4        6400  0.04251015 #> 5       25600  0.02123563"},{"path":"https://dtkaplan.github.io/LSTbook/reference/AAUP.html","id":null,"dir":"Reference","previous_headings":"","what":"1984 salaries in various professional fields — AAUP","title":"1984 salaries in various professional fields — AAUP","text":"data published American Association University Professsor's journal, Academe. compiled Marcia Bellas drawing data 1984 Carnegie survey faculty, US National Science Foundation, National Research Council, US Census Bureau. motivation work investigate salary \"disparities among faculty whose education experience comparable whose duties broadly similar,\" particular due sex. Regretably, data include measures production workers various fields numbers people employed field.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/AAUP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"1984 salaries in various professional fields — AAUP","text":"","code":"data(AAUP)"},{"path":"https://dtkaplan.github.io/LSTbook/reference/AAUP.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"1984 salaries in various professional fields — AAUP","text":"28 rows, professional discipline: subject name discipline ac: average salary (USD) academics nonacsal median salary (USD) non-academics fem: fraction workforce female unemp: unemployment rate discipline nonac: fraction workforce non-academic, licenced: work profession require license (George Cobb's paper)","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/AAUP.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"1984 salaries in various professional fields — AAUP","text":"George Cobb (2011) \"Teaching statistics: important tensions\" Chilean Journal Statistics 2(1):31-62 link","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/AAUP.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"1984 salaries in various professional fields — AAUP","text":"M Bellas & BF Reskin (1994) \"comparable worth\" Academe 80:83-85","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Anthro_F.html","id":null,"dir":"Reference","previous_headings":"","what":"Anthropometric data from college-aged women — Anthro_F","title":"Anthropometric data from college-aged women — Anthro_F","text":"Percentage body fat, age, weight, height, body mass index fourteen circumference measurements given 184 college women ages 18-25. Body fat accurately determined underwater weighing technique requires special equipment training individuals conducting process. Circumference measurements made nearest 0.1 cm using cloth tape complete contact skin without compression soft tissues. measurement process, described somewhat incompletely , described greater detail Slack (1997) used standards recommended Lohman, Roche Martrell (1988).","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Anthro_F.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anthropometric data from college-aged women — Anthro_F","text":"","code":"data(Anthro_F)"},{"path":"https://dtkaplan.github.io/LSTbook/reference/Anthro_F.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Anthropometric data from college-aged women — Anthro_F","text":"data.frame one row 184 woman Weight (kg) Height (m) BMI: (Body Mass Index) Weight divided square Height Age Neck: Minimal circumference perpendicular long axis neck (cm) Chest: Horizontal plane measurement sixth rib, end normal expiration (cm) Calf: Horizontal maximal calf measurement (cm) Biceps: Measurement arm extended (cm) Hips: Horizontal maximal measurement around buttocks (cm) Waist: Horizontal minimal measurement, end normal expiration (cm) Forearm: Maximal measurement perpendicular long axis (cm) PThigh: (Proximal Thigh) Horizontal measurement immediately distal gluteal furrow (cm) MThigh: (Middle Thigh) Measurement midway midpoint inguinal crease proximal border patella (cm) DThigh: (Distal Thigh) Measurement proximal femoral epicondyles (cm) Wrist: Measurement perpendicular long axis forearm (cm) Knee: Measurement mid-patellar level, knee slightly flexed (cm) Elbow: minimal circumference measurement elbow extended (cm) Ankle: Minimal circumference measurement perpendicular long axis calf (cm) BFat: Amount body fat expressed percentage total body weight, using Siri's (1956) method","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Anthro_F.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Anthropometric data from college-aged women — Anthro_F","text":"Roger W. Johnson (2021) \"Fitting Percentage Body Fat Simple Body Measurements: College Women\" Journal Statistics Data Science Education 29(3) doi:10.1080/26939169.2021.1971585","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Birdkeepers.html","id":null,"dir":"Reference","previous_headings":"","what":"Birdkeeping and Lung Cancer — Birdkeepers","title":"Birdkeeping and Lung Cancer — Birdkeepers","text":"1972--1981 health survey Hague, Netherlands, discovered association keeping pet birds increased risk lung cancer.  investigate birdkeeping risk factor, researchers conducted case--control study patients 1985 four hospitals Hague (population 450,000).  identified 49 cases lung cancer among patients registered general practice, age 65 younger resided city since 1965.  also selected 98 controls population residents general age structure.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Birdkeepers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Birdkeeping and Lung Cancer — Birdkeepers","text":"","code":"data(Birdkeepers)"},{"path":"https://dtkaplan.github.io/LSTbook/reference/Birdkeepers.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Birdkeeping and Lung Cancer — Birdkeepers","text":"data frame 147 observations following 7 variables. LC Whether subject lung cancer FM Sex subject SS Socioeconomic status, determined occupation household's principal wage earner BK Indicator birdkeeping (caged birds home 6 consecutive months 5 14 years diagnosis (cases) examination (control)) AG Age subject (years) YR Years smoking prior diagnosis examination CD Average rate smoking (cigarettes per day)","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Birdkeepers.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Birdkeeping and Lung Cancer — Birdkeepers","text":"Ramsey, F.L. Schafer, D.W. (2013). Statistical Sleuth: Course Methods Data Analysis (3rd ed), Cengage Learning.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Birdkeepers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Birdkeeping and Lung Cancer — Birdkeepers","text":"dataset copied renamed Sleuth3 R package, called case2002.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Birdkeepers.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Birdkeeping and Lung Cancer — Birdkeepers","text":"Holst, P.., Kromhout, D. Brand, R. (1988).  \"Debate: Pet Birds Independent Risk Factor Lung Cancer\" British Medical Journal 297: 13--21.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Births2022.html","id":null,"dir":"Reference","previous_headings":"","what":"Records on births in the US in 2022 — Births2022","title":"Records on births in the US in 2022 — Births2022","text":"data come Centers Disease Controls \"public use file\" recording 3,699,040 (known) births US 2022. Births2022 random sample size 20,000 comprehensive file","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Births2022.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Records on births in the US in 2022 — Births2022","text":"","code":"Births2022"},{"path":"https://dtkaplan.github.io/LSTbook/reference/Births2022.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Records on births in the US in 2022 — Births2022","text":"data frame 20,000 observations following 38 variables. unit observation birth. month: 1-12 dow: Day week: Sun, Mon, Tues, ... place: hospital, home, clinic, etc. paternity: paternity acknowledged. Y, N, X. X stands \"applicable\" shorthand mother married (consequently husband presumed father). meduc: mother's educational level. <8 8th grade less, HSG+ means high school plus college degree. feduc: father's education. coding meduc. married: mother married? mage: mother's age fage: father's age total_kids: many total births mother including one. interval: months since last birth (applicable). prenatal_start: trimester mother start prenatal care? prenatal_visits: many total prenatal care visits. mheight: Mother's height inches wt_pre: Mother's weight pounds pregnancy wt_delivery: Mother's weight pounds delivery diabetes_pre: mother diabetes pregnancy diabetes_gest: mother develop gestational diabetes hbp_pre: mother high blood pressure pregancy hbp_gest: mother develop high blood pressure pregnancy eclampsia: mother develop eclampsia induction: labor induced? augmentation: uterus stimulated increase frequency, duration, intensity contractions. anesthesia: mother given anesthesia? presentation: Baby's presentation birth (e.g. cephalic breech) method: method delivery (vaginal C-section) trial_at_labor: mother's delivered C-section, attempt labor. attendant: MD, , midwife, payment: bill paid? apgar5, apgar10: APGAR scores (0-10) five ten minutes birth. plurality: singletons, twins, triplets, quadruplets (integer 1-4) sex: Baby's sex duration: Duration gestation, weeks \"obstretric estimate.\" menses: Last normal menses month: 1-12 (Jan-Dec) weight: Baby's weight (grams) living: Baby living time birth report breastfed: Baby breastfed time discharge","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Births2022.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Records on births in the US in 2022 — Births2022","text":"US Centers Disease Control \"Natality Public Use File\", CDC vital stats online","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Births2022.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Records on births in the US in 2022 — Births2022","text":"\"User Guide 2022 Natality Public Use File\"","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Boston_marathon.html","id":null,"dir":"Reference","previous_headings":"","what":"Winning times in the Boston Marathon — Boston_marathon","title":"Winning times in the Boston Marathon — Boston_marathon","text":"Boston marathon oldest continuing marathon US.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Boston_marathon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Winning times in the Boston Marathon — Boston_marathon","text":"","code":"Boston_marathon"},{"path":"https://dtkaplan.github.io/LSTbook/reference/Boston_marathon.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Winning times in the Boston Marathon — Boston_marathon","text":"data frame year name: winner's name country winner registered time: winning time sex: female male minutes: winning time converted minutes","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Boston_marathon.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Winning times in the Boston Marathon — Boston_marathon","text":"Boston Athletic Association","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Butterfly.html","id":null,"dir":"Reference","previous_headings":"","what":"World records in the 100 & 200 m butterfly swim — Butterfly","title":"World records in the 100 & 200 m butterfly swim — Butterfly","text":"World records 100 & 200 m butterfly swim","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Butterfly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"World records in the 100 & 200 m butterfly swim — Butterfly","text":"","code":"data(Butterfly)"},{"path":"https://dtkaplan.github.io/LSTbook/reference/Butterfly.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"World records in the 100 & 200 m butterfly swim — Butterfly","text":"data.frame object one row world record variables time: record time seconds swimmer name swimmer date Date object containing date record made place string descripting location sex: coded F M lengths: total distance divided lengths either 25 50 meters. lengths gives number lengths total distance. dist: total distance (meters) race","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Butterfly.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"World records in the 100 & 200 m butterfly swim — Butterfly","text":"Wikipedia","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Calif_precip.html","id":null,"dir":"Reference","previous_headings":"","what":"Annual precipitation in California locations — Calif_precip","title":"Annual precipitation in California locations — Calif_precip","text":"data article journal Geography illustrates precipitation modeling.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Calif_precip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annual precipitation in California locations — Calif_precip","text":"","code":"Calif_precip"},{"path":"https://dtkaplan.github.io/LSTbook/reference/Calif_precip.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Annual precipitation in California locations — Calif_precip","text":"data.frame 30 rows, weather station California station: name station precip average annual precipitation inches altitude feet latitude station's north-south location (degrees North) distance: distance miles coast orientation: related rain shadow effect mountains. \"W\" means westward facing (toward prevailing winds). \"L\" mean \"leeward,\" , facing away prevailing winds.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Calif_precip.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Annual precipitation in California locations — Calif_precip","text":"P. J. Taylor (1980)  \"Pedagogic Application Multiple Regression Analysis: Precipitation California\" Geography 65 (3) 203-212","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Callback.html","id":null,"dir":"Reference","previous_headings":"","what":"Resume Experiment Data — Callback","title":"Resume Experiment Data — Callback","text":"Data experimental study researchers sent resumes fictitious job applicants potential employers. first names fictitious applicants set randomly sound either Black white.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Callback.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resume Experiment Data — Callback","text":"","code":"data(\"Callback\")  Names_and_race"},{"path":"https://dtkaplan.github.io/LSTbook/reference/Callback.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Resume Experiment Data — Callback","text":": Callback: data frame 4870 rows 4 variables. row one fictitious applicant name: first name fictitious job applicant sex: sex applicant (female male) callback: whether potential employer called back follow . (1 = yes, 0 = ) Another data frame, Names_and_race: first names associated race. object class grouped_df (inherits tbl_df, tbl, data.frame) 36 rows 2 columns.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Callback.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Resume Experiment Data — Callback","text":"Imai, Kosuke. 2017. Quantitative Social Science: Introduction. Princeton University Press.  URL whence data added package. QSS, data called resume. Marianne Bertrand Sendhil Mullainathan (2004) “Emily Greg employable Lakisha Jamal? field experiment labor market discrimination.” American Economic Review, vol. 94, . 4, pp. 991–1013. doi: 10.3386/w9873","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/College_grades.html","id":null,"dir":"Reference","previous_headings":"","what":"Grades at a small college — College_grades","title":"Grades at a small college — College_grades","text":"actual grades 400+ individual students courses took small, liberal-arts college midwest US. students graduated 2006. row corresponds single student single course. data de-identified translating student ID, instructor ID, name department. Typically graduating student taken 32 courses. another form de-identification, half courses student, selected randomly, included. courses 10 students enrolled included.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/College_grades.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Grades at a small college — College_grades","text":"","code":"data(College_grades)"},{"path":"https://dtkaplan.github.io/LSTbook/reference/College_grades.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Grades at a small college — College_grades","text":"data frame 6146 Grades 443 students.","code":"-grade The letter grade for the student in this course: A is the highest. - sessionID An identifier for the course taken. Courses offered multiple times in one semester or across semesters have individual IDs. -sid The student ID -dept The department in which the course was offered. 100 is entry-level, 200 sophomore-level, 300 junior-level, 400 senior-level. -enroll Student enrollment in the course. This includes students who are not part of this sample. -iid Instructor ID -gradepoint A translation of the letter grade into a numerical scale. 4 is high. Some letter grades are not counted in a student's gradepoint average. These have \\code{NA} for the gradepoint."},{"path":"https://dtkaplan.github.io/LSTbook/reference/College_grades.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Grades at a small college — College_grades","text":"data helpfully provided registrar college proviso de-identification steps outlined performed.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Econ_outlook_poll.html","id":null,"dir":"Reference","previous_headings":"","what":"SIMULATED data from an economic outlook poll — Econ_outlook_poll","title":"SIMULATED data from an economic outlook poll — Econ_outlook_poll","text":"SIMULATED data economic outlook poll","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Econ_outlook_poll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SIMULATED data from an economic outlook poll — Econ_outlook_poll","text":"","code":"Econ_outlook_poll"},{"path":"https://dtkaplan.github.io/LSTbook/reference/Econ_outlook_poll.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SIMULATED data from an economic outlook poll — Econ_outlook_poll","text":"10,000 rows three variables: age, income, pessimism Data simple SIMULATION people's pessimism economic state based age group income group. Nothing real world inferred data; merely illustrate adjusting covariates.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Econ_outlook_poll.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"SIMULATED data from an economic outlook poll — Econ_outlook_poll","text":"simulation \"Statistical Modeling: Fresh Approach\" (2/e). Code file system.file(\"SM2-simulations.R\", package=\"LSTbook\")","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/FARS.html","id":null,"dir":"Reference","previous_headings":"","what":"Annual summaries concerning motor-vehicle related fatalities in the US#' — FARS","title":"Annual summaries concerning motor-vehicle related fatalities in the US#' — FARS","text":"Annual summaries concerning motor-vehicle related fatalities US#'","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/FARS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annual summaries concerning motor-vehicle related fatalities in the US#' — FARS","text":"","code":"data(FARS)"},{"path":"https://dtkaplan.github.io/LSTbook/reference/FARS.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Annual summaries concerning motor-vehicle related fatalities in the US#' — FARS","text":"data.frame object one row per year 1994 2016 year: year covered summary crashes number incidents year drivers number drivers killed incidents passengers number passengers killed incidents unknown vehicle occupants killed whose status driver passenger unknown motorcyclists number motorcyclists killed incidents pedestrians number pedestrians killed incidentss pedalcyclists number non-motorized cyclist deaths other_nonvehicle number deaths incidents vehicle_miles number miles driven vehicles, whether involved incident . (billions miles) population population US (thousands people) registered_vehicles number motor vehicles registered US (thousands) licenced_drivers number licenced drivers US (thousands)","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/FARS.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Annual summaries concerning motor-vehicle related fatalities in the US#' — FARS","text":"Fatality Analysis Reporting System US Department Transportation (DOT). data put tidy form untidy version published DOT, removing columns calculated columns .","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/FEV.html","id":null,"dir":"Reference","previous_headings":"","what":"Smoking and lung function among youths — FEV","title":"Smoking and lung function among youths — FEV","text":"Data Childhood Respiratory Disease Study collected late 1970s examine effects smoking exposure second-hand smoke. pulmonary functions youths.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/FEV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Smoking and lung function among youths — FEV","text":"","code":"data(FEV)"},{"path":"https://dtkaplan.github.io/LSTbook/reference/FEV.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Smoking and lung function among youths — FEV","text":"data.frame one row 645 youngsters. age years FEV (forced expiratory lung volume) liters height inches sex smoker whether youngster smokes","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/FEV.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Smoking and lung function among youths — FEV","text":"Cummiskey, et al. (2020) \"Causal Inference Introductory Statistics Courses\" Journal Statistics Education 28(1) doi:10.1080/10691898.2020.1713936","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Framingham.html","id":null,"dir":"Reference","previous_headings":"","what":"Data from the Framingham heart study — Framingham","title":"Data from the Framingham heart study — Framingham","text":"launched 1948 original goal Framingham Heart Study (FHS) launched 1948 goal identifying risk factors cardiovascular disease. FHS 14,000 people three generations, including original participants, children, grandchildren. data represent 4238 Framingham subjects published Kaggle machine-learning competition. goal competition predict TenYearCHD factors.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Framingham.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data from the Framingham heart study — Framingham","text":"","code":"data(Framingham)"},{"path":"https://dtkaplan.github.io/LSTbook/reference/Framingham.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data from the Framingham heart study — Framingham","text":"4238 rows, FHS subject. 16 variables: sex age patient education highest level achieved: HS, HS grad/GED, college/vocational school, college graduate currentSmoker: whether patient current smoker cigsPerDay: number cigarettes person smoked average one day. BPMeds: whether patient blood pressure medication prevalentStroke: whether patient previously stroke prevalentHyp: whether patient hypertensive diabetes: whether patient diabetes totChol: total cholesterol level sysBP: systolic blood pressure diaBP: diastolic blood pressure BMI: Body Mass Index heartRate: heart rate glucose: glucose level TenYearCHD: patient develop congestive heart disease 10 year follow-? (1=Yes)","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Framingham.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data from the Framingham heart study — Framingham","text":"Kaggle Github repository","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Framingham.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Data from the Framingham heart study — Framingham","text":"Description FHS National Heart, Lung, Blood Institute","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Germany1933vote.html","id":null,"dir":"Reference","previous_headings":"","what":"Voting patterns in the 1933 German national election — Germany1933vote","title":"Voting patterns in the 1933 German national election — Germany1933vote","text":"1933 year Hitler Nazi party came power. initial basis national election Nazis secured substantial fraction vote. (Immediately election, Nazis burned Reichtag (German parliament) started repressing political opposition though campaign imprisonment murder.)","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Germany1933vote.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Voting patterns in the 1933 German national election — Germany1933vote","text":"","code":"data(\"Germany1933vote\")"},{"path":"https://dtkaplan.github.io/LSTbook/reference/Germany1933vote.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Voting patterns in the 1933 German national election — Germany1933vote","text":"data frame 681 rows 7 variables. row German precinct. self: share potential voters self-employed blue: share potential voters blue-collar workers white: share potential voters white-collar workers domestic: share potential voters employed domestically unemployed: share potential voters un-employed nvoter: number eligible voters (clear include people vote) nazivote: number votes Nazis","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Germany1933vote.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Voting patterns in the 1933 German national election — Germany1933vote","text":"Imai, Kosuke. 2017. Quantitative Social Science: Introduction. Princeton University Press. URL whence data added package. QSS, data called nazis. G. King, O. Rosen, M. Tanner, .F. Wagner (2008) “Ordinary economic voting behavior extraordinary election Adolf Hitler.” Journal Economic History, vol. 68, pp. 951–996.#'","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Gilbert.html","id":null,"dir":"Reference","previous_headings":"","what":"Data from the trial of serial killer Kristen Gilbert — Gilbert","title":"Data from the trial of serial killer Kristen Gilbert — Gilbert","text":"Intensive care unit nurse Kristen Gilbert worked several years 1990s Veterans Administration Hospital. co-workers became suspicious. co-workers observed unexpected patient deaths occurred frequently shifts shifts. also noticed shortage supplies cardiac stimulant epinephrine, can fatal administered large enough doses IV drip. hospital investigators went shifts years Gilbert worked hospital, noting whether Gilbert duty shift whether death shift.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Gilbert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data from the trial of serial killer Kristen Gilbert — Gilbert","text":"","code":"data(Gilbert)"},{"path":"https://dtkaplan.github.io/LSTbook/reference/Gilbert.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data from the trial of serial killer Kristen Gilbert — Gilbert","text":"data frame one row shift VA hospital. death Whether patient death occurred shift. gilbert Whether nurse Kristen Gilbert duty shift. time: winning time seconds race name race. Many races repeated successive years. year year race run name name winning runner sex: runner's sex, coded F M distance: total distance race km climb: total vertical climb race meters","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Gilbert.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data from the trial of serial killer Kristen Gilbert — Gilbert","text":"tabular summaries shift/death information public. data frame reconstructed summaries.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Go_vote.html","id":null,"dir":"Reference","previous_headings":"","what":"Get out the vote experiment — Go_vote","title":"Get out the vote experiment — Go_vote","text":"experiment ways encourage voting primary elections. 2006 primary election Michigan, registered voters randomly assigned different treatments, form postcard mailed primary. high-pressure message(\"Neighbors\") listed voters neighbors whether voted previous primary elections. card promised send information 2006 primary, \"neighbors know voted .\" (Gerber et al. reference, .) another treatment, \"Civic Duty,\" postcard said, \"August 8, remember rights responsibilities citizen. Remember vote. CIVIC DUTY---VOTE!\" Yet another treatment, \"Hawthorne\" simply told voter \"STUDIED!\" part research people vote. also control group receive postcard.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Go_vote.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get out the vote experiment — Go_vote","text":"","code":"data(Go_vote)"},{"path":"https://dtkaplan.github.io/LSTbook/reference/Go_vote.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Get out the vote experiment — Go_vote","text":"data frame 305866 rows 6 variables: sex voter (female male) yearofbirth: year birth voter primary2004: whether voter voted 2004 primary election (voted, abstained) messages: Get---vote message voter received (Civic Duty, Control, Neighbors, Hawthorne) primary2006: whether voter turned 2006 primary election (voted, abstained) hhsize: household size voter","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Go_vote.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get out the vote experiment — Go_vote","text":"Imai, Kosuke. 2017. Quantitative Social Science: Introduction. Princeton University Press. URL. Alan S. Gerber, Donald P. Green, Christopher W. Larimer (2008) “Social pressure voter turnout: Evidence large-scale field experiment.” American Political Science Review, vol. 102, . 1, pp. 33–48. doi: 10.1017/S000305540808009X","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Hill_racing.html","id":null,"dir":"Reference","previous_headings":"","what":"Winning times in Scottish Hill races, 2005-2017 — Hill_racing","title":"Winning times in Scottish Hill races, 2005-2017 — Hill_racing","text":"Winning times Scottish Hill races, 2005-2017","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Hill_racing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Winning times in Scottish Hill races, 2005-2017 — Hill_racing","text":"","code":"data(Hill_racing)"},{"path":"https://dtkaplan.github.io/LSTbook/reference/Hill_racing.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Winning times in Scottish Hill races, 2005-2017 — Hill_racing","text":"data.frame object one row race winner. races male female winner. \"year\"     \"sex\"      \"name\"     \"time\"     \"race\"     \"distance\" \"climb\" time: winning time seconds race name race. Many races repeated successive years. year year race run name name winning runner sex: runner's sex, coded F M distance: total distance race km climb: total vertical climb race meters","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Hill_racing.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Winning times in Scottish Hill races, 2005-2017 — Hill_racing","text":"data scraped Scottish Hill Racing site.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/MPG.html","id":null,"dir":"Reference","previous_headings":"","what":"Fuel economy measurements on US car models — MPG","title":"Fuel economy measurements on US car models — MPG","text":"Fuel economy measurements US car models","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/MPG.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fuel economy measurements on US car models — MPG","text":"","code":"data(MPG)"},{"path":"https://dtkaplan.github.io/LSTbook/reference/MPG.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Fuel economy measurements on US car models — MPG","text":"data.frame object one row year model configuration automobile light truck sold US. manufacturer: name company making vehicle division: name company division making vehicle model: vehicle model name fuel_year: fuel consumed 10,000 miles (roughly 1 year.) CO2_year: Carbon dioxide produced per year, kilograms. 10,000 miles driving taken represent year. Note, Carbon-per-year (without oxygen) roughly one-quarter mass CO2-per-year. hybrid: whether car hybrid class: type vehicle, e.g. midsize, compact, large, SUV vol_passenger: volume passengers (cubic feet) vol_luggage: volume luggage (cubic feet) doors: number passenger doors mpg_city: Estimated fuel consumption city driving (miles per gallon) mpg_hwy: like mpg_city highway driving mpg_comb: like mpg_city standard combination city highway driving EPA_fuel_cost: Annual fuel cost using standard price gas standard miles per year driving. valves_exhaust: many exhaust valves per cylinder valves_intake: many air intake valves per cylinder CO2city: estimate carbon-dioxide (grams/mile) production per mile city driving. CO2hwy: like CO2city highway driving CO2combined: like CO2city standard mixture city highway driving hatchback: hatchback rear door start_stop: vehicle system stop engine idling cyl_deact: cylinders engine deactivated power demand warrants fuel: kind fuel used. G = regular unleaded gasoline, GM = mid-grade recommended, GP = premium unleaded recommended, GPR = premium unleaded required, DU = diesel (ultra low sulfur) drive: type drive, e.g. front-wheel, 4-wheel, ... regen: wheels regenerative breaking (hybrids) n_gears: number transmission gears n_cyl: number engine cylinders displacement: engine displacement (liters) transmission: transmission type = automatic, M = manual,  = automated manual, = automated manual (paddles), CVT = continuously variable, SCV = continuously variable selection paddles, SA = semi-automatic lockup_torque_converter: air_aspiration: model_year:","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/MPG.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Fuel economy measurements on US car models — MPG","text":"Data US Environmental Protection Agency (EPA) available https://www.fueleconomy.gov/feg/download.shtml. file 2019 model-year vehicles https://www.fueleconomy.gov/feg/epadata/19data.zip","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/McClave_Sincich.html","id":null,"dir":"Reference","previous_headings":"","what":"Data from McClave-Sincich Statistics 11/e — McClave_Sincich","title":"Data from McClave-Sincich Statistics 11/e — McClave_Sincich","text":"relatively small data frames used exercises","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/McClave_Sincich.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data from McClave-Sincich Statistics 11/e — McClave_Sincich","text":"","code":"Clock_auction  Geography_journals  PGA_index  Dowsing"},{"path":"https://dtkaplan.github.io/LSTbook/reference/McClave_Sincich.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data from McClave-Sincich Statistics 11/e — McClave_Sincich","text":"Clock_auction: Prices grandfather clocks sold auction Sales price clock Age clock Number bidders clock Geography_journals: Prices geography journals, c. 2005 journal name journal cost one-year subscription jif journal impact factor cites number citations journal past five years rpi relative price index PGA_index: Driving distance, accuracy, derived index PGA tour player name player dist driving distance yards accuracy percent drives land fairway index index score ranking players. Dowsing: Locations identified dowsers experiment trial just row number subject identifying number assigned subject pipe location flowing-water pipe along 10-meter line (decimeters) guess dowser's guess location pipe trial (decimeters)","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/McClave_Sincich.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data from McClave-Sincich Statistics 11/e — McClave_Sincich","text":"StatCrunch","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/McCredie_Kurtz.html","id":null,"dir":"Reference","previous_headings":"","what":"","title":"","text":"Abstract research paper: Five-factor personality ratings provided undergraduate freshmen, parents, college peers predictors cumulative GPA upon graduation. Conscientiousness ratings significant predictors GPA three raters; peer ratings Conscientiousness significant predictor GPA self-, parent-, peer-ratings Conscientiousness examined simultaneously. College major moderator relationship, self- parent-ratings Conscientiousness correlating strongly GPA among Social Science majors parent-ratings Conscientiousness correlating less strongly GPA among Science majors. findings replicate existing research regarding validity informant ratings predictors behavioral outcomes academic performance, emphasizing importance including multiple informants various life contexts.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/McCredie_Kurtz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"","text":"","code":"data(McCredie_Kurtz)"},{"path":"https://dtkaplan.github.io/LSTbook/reference/McCredie_Kurtz.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"","text":"simplicity, mother's father's ratings student given. variable name indicates whose rating scale, e.g. m_extra mothers rating extraversion scale. variables : subjid: Unique ID student age: student's age ratings collected GPA: student's eventual 4-year grade-point average sex: student's sex field: field student ended studying","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/McCredie_Kurtz.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"","text":"McCredie_Kurtz_Open_Data.sav comes https://data.mendeley.com/datasets/rn2bpp6f37/1","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/McCredie_Kurtz.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"","text":"five personality factors : extraversion: sociability neuroticism: sadness emotional instability openness experience agreeableness: kindness conscientiousness: thoughtfulness","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/McCredie_Kurtz.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"","text":"Morgan N. McCredie John E. Kurtz (2020) \"Prospective prediction academic performance college using self- informant-rated personality traits\" Journal Research Personality 85","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Minneapolis2013.html","id":null,"dir":"Reference","previous_headings":"","what":"Ballots in the 2013 Mayoral election in Minneapolis — Minneapolis2013","title":"Ballots in the 2013 Mayoral election in Minneapolis — Minneapolis2013","text":"Ballot information 2013 Minneapolis Mayoral election, run rank-choice election. choices marked (valid) ballot election, run using rank-choice, instant runoff system.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Minneapolis2013.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ballots in the 2013 Mayoral election in Minneapolis — Minneapolis2013","text":"","code":"Minneapolis2013"},{"path":"https://dtkaplan.github.io/LSTbook/reference/Minneapolis2013.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Ballots in the 2013 Mayoral election in Minneapolis — Minneapolis2013","text":"data frame 80,101 observations following 5 variables. unit observation (valid) ballot cast election. variables stored character strings. Precinct Precincts sub-divisions within Wards. First voter's first choice. \"undervote\" means candidate selected. Second voter's second choice Third voter's third choice Ward city divided spatially districts 'wards'. subdivided precincts.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Minneapolis2013.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Ballots in the 2013 Mayoral election in Minneapolis — Minneapolis2013","text":"rank-choice, voter can indicate first, second, third choices.  voter's first choice eliminated (last count across voters), second choice promoted voter's first choice, similarly third -> second.  Eliminations done successively one candidate majority first-choice votes.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Minneapolis2013.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Ballots in the 2013 Mayoral election in Minneapolis — Minneapolis2013","text":"Description ranked-choice voting: https://vote.minneapolismn.gov/ranked-choice-voting/ Minnesota Public Radio story election ballot tallying process: https://www.mprnews.org/2013/11/22/politics/ranked-choice-vote-count-programmers/ Wikipedia article election: https://en.wikipedia.org/wiki/2013_Minneapolis_mayoral_election Ballot data Minneapolis city government: https://vote.minneapolismn.gov/results-data/election-results/2013/mayor/","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Monocacy_river.html","id":null,"dir":"Reference","previous_headings":"","what":"Data on run-off from the Monocacy river at Jug Bridge, Maryland. — Monocacy_river","title":"Data on run-off from the Monocacy river at Jug Bridge, Maryland. — Monocacy_river","text":"rains, water absorbed ground quickly evaporates. water runs (\"runoff\") collected streams rivers. data, 1964 reference water resource management, measured 25 storms basin Monocacy River Jug Bridge, Maryland, US.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Monocacy_river.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data on run-off from the Monocacy river at Jug Bridge, Maryland. — Monocacy_river","text":"","code":"Monocacy_river"},{"path":"https://dtkaplan.github.io/LSTbook/reference/Monocacy_river.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data on run-off from the Monocacy river at Jug Bridge, Maryland. — Monocacy_river","text":"data.frame 25 observations following 2 variables' precipitation: amount rain inches runoff runoff inches","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Monocacy_river.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data on run-off from the Monocacy river at Jug Bridge, Maryland. — Monocacy_river","text":"\"Probability Concepts Engineering\" H-S Ang W H Tang, 2007, John Wiley based R.K. Linsley J.B. Franzini (1964) Water Resources Engineering McGraw-Hill, p.68","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Monocacy_river.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data on run-off from the Monocacy river at Jug Bridge, Maryland. — Monocacy_river","text":"WERER , COPYING Rd file man/","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Offspring.html","id":null,"dir":"Reference","previous_headings":"","what":"Relative sizes offspring/parent for many species — Offspring","title":"Relative sizes offspring/parent for many species — Offspring","text":"Body mass adult numerous vertebrate species newly hatched born offspring.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Offspring.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Relative sizes offspring/parent for many species — Offspring","text":"","code":"data(\"Offspring\")"},{"path":"https://dtkaplan.github.io/LSTbook/reference/Offspring.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Relative sizes offspring/parent for many species — Offspring","text":"data.frame 3971 rows, different species species class (phylogenetic class) group (phylogenetic group) adult Mass adult (female) grams. hatchling Mass offspring, grams. applies well species offspring born rather hatched.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Offspring.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Relative sizes offspring/parent for many species — Offspring","text":"Shai Meiri, \"Endothermy, offspring size evolution parental provisioning vertebrates\", Biological Journal Linnean Society, 128:4, pp. 1052-6 (See Appendix S1.)","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Orings.html","id":null,"dir":"Reference","previous_headings":"","what":"Space Shuttle O-Ring Failures — Orings","title":"Space Shuttle O-Ring Failures — Orings","text":"January 27, 1986, night space shuttle Challenger exploded, engineer recommended National Aeronautics Space Administration (NASA) shuttle launched cold weather.  forecasted temperature Challenger launch 31 degrees Fahrenheit---coldest launch ever.  intense 3-hour telephone conference, officials decided proceed launch.  data frame contains launch temperatures number O-ring problems 24 shuttle launches prior Challenger. (documentation comes Sleuth3 package, dataset called ex2223.)","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Orings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Space Shuttle O-Ring Failures — Orings","text":"","code":"data(Orings)"},{"path":"https://dtkaplan.github.io/LSTbook/reference/Orings.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Space Shuttle O-Ring Failures — Orings","text":"data frame 24 observations following 2 variables. temp Launch temperatures (degrees Fahrenheit) incidents Numbers O-ring incidents","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Orings.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Space Shuttle O-Ring Failures — Orings","text":"Ramsey, F.L. Schafer, D.W. (2013). Statistical Sleuth: Course Methods Data Analysis (3rd ed), Cengage Learning.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/PIDD.html","id":null,"dir":"Reference","previous_headings":"","what":"Pima Indians Diabetes Database — PIDD","title":"Pima Indians Diabetes Database — PIDD","text":"\"population study Pima Indian population near Phoenix, Arizona. population continuous study since 1965 National Institute Diabetes Digestive Kidney Diseases high incidence rate diabetes. community resident 5 years age asked undergo standardized examination every two years, included oral glucose tolerance test. Diabetes diagnosed according World Health Organization Criteria; , 2 hour post-load plasma glucose least 200 mg/dl (11.1 mmol/l) survey examination Indian Health Service Hospital serving community found glucose concentration least 200 mg/dl course routine medical care.\" --- quoted reference . data published Kaggle machine-learning competition whose goal develop prediction function diabetes.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/PIDD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pima Indians Diabetes Database — PIDD","text":"","code":"data(PIDD)"},{"path":"https://dtkaplan.github.io/LSTbook/reference/PIDD.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Pima Indians Diabetes Database — PIDD","text":"768 rows, woman 21 years older. 9 variables: age woman pregnancies: number previous pregnancies glucose: glucose level BP: systolic blood pressure skin_thickness: insulin: bmi: Body mass index pedigree: \"Diabetes Pedigree Function\" diabetes: patient develop diabetes 5-year follow-?","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/PIDD.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Pima Indians Diabetes Database — PIDD","text":"Kaggle","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/PIDD.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Pima Indians Diabetes Database — PIDD","text":"Smith, J.W., Everhart, J.E., Dickson, W.C., Knowler, W.C., & Johannes, R.S. (1988) \"Using ADAP learning algorithm forecast onset diabetes mellitus\" Proceedings Symposium Computer Applications Medical Care","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Penguins.html","id":null,"dir":"Reference","previous_headings":"","what":"Body measurements on penguins — Penguins","title":"Body measurements on penguins — Penguins","text":"palmerpenguins::penguins data frame slightly simplified variable names.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Penguins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Body measurements on penguins — Penguins","text":"","code":"Penguins"},{"path":"https://dtkaplan.github.io/LSTbook/reference/Penguins.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Body measurements on penguins — Penguins","text":"object class tbl_df (inherits tbl, data.frame) 333 rows 8 columns.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Registrar.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample from a college registrar's database — Registrar","title":"Sample from a college registrar's database — Registrar","text":"Grade data students liberal arts college. IDs students, professors, departments dis-identified.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Registrar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample from a college registrar's database — Registrar","text":"","code":"Sessions  Grades  Gradepoint"},{"path":"https://dtkaplan.github.io/LSTbook/reference/Registrar.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample from a college registrar's database — Registrar","text":"Three data frames Sessions: ID class session, , course semester sessionID: Unique identifier session iid: Unique identifier instructor enroll: Total enrollment session (note: includes students make sample Grades) dept: Unique identifier department level: Instruction evel course 100, 200, 300, 400. Roughly: first-year, sophomore, junior, senior sem: semester session held. Grades: 50% random sample student--student grades Sessions sid: Unique identifier student. grade: Letter grade: , -, B+ , sessionID: course session grade, Sessions data frame Gradepoint: Letter numerical conversion (per college policy) grade: Letter grade: , -, gradepoint: Numerical equivalent object class data.frame 6124 rows 3 columns. object class grouped_df (inherits tbl_df, tbl, data.frame) 14 rows 2 columns.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Registrar.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Sample from a college registrar's database — Registrar","text":"Used permission college's registrar.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/STAR.html","id":null,"dir":"Reference","previous_headings":"","what":"STAR Project Data — STAR","title":"STAR Project Data — STAR","text":"Data STAR (Student–Teacher Achievement Ratio) Project, four-year longitudinal study examining effect class size early grade levels educational performance personal development","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/STAR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"STAR Project Data — STAR","text":"","code":"data(\"STAR\")"},{"path":"https://dtkaplan.github.io/LSTbook/reference/STAR.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"STAR Project Data — STAR","text":"data frame 6325 rows 6 variables: race: black white classtype: kindergarten class type: small, regular, regular aid yearssmall: number years (0 4) small classes hsgrad: high-school graduation (graduated ). NOTE: many NAs g4math: total scaled score math portion fourth-grade standardized test g4reading: total scaled score reading portion fourth-grade standardized test","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/STAR.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"STAR Project Data — STAR","text":"Imai, Kosuke. 2017. Quantitative Social Science: Introduction. Princeton University Press. URL whence data added package. Mosteller, Frederick. 1997. “Tennessee Study Class Size Early School Grades.” Bulletin American Academy Arts Sciences 50(7): 14-25. doi = 10.2307/3824562","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Shipping_losses.html","id":null,"dir":"Reference","previous_headings":"","what":"Shipping losses in 1941 in the Atlantic — Shipping_losses","title":"Shipping losses in 1941 in the Atlantic — Shipping_losses","text":"major theater action World War II Atlantic ocean. Germany attempted submarine aerial attacks sink shipping supplying Britain war. table summarizes losses 1941.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Shipping_losses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shipping losses in 1941 in the Atlantic — Shipping_losses","text":"","code":"data(Shipping_losses)"},{"path":"https://dtkaplan.github.io/LSTbook/reference/Shipping_losses.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Shipping losses in 1941 in the Atlantic — Shipping_losses","text":"12 rows, one month 1941 month nships number ships sunk tons gross tonnage ships sunk. includes ship cargo. country whether ships British, belonged Allied Neutral countries.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Shipping_losses.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Shipping losses in 1941 in the Atlantic — Shipping_losses","text":"W.S. Churchill (1952) Grand Alliance history Second World War. Houghton Mifflin Co. Boston. p. 782","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Short_examples.html","id":null,"dir":"Reference","previous_headings":"","what":"Short, simple data frames for textbook examples — Nats","title":"Short, simple data frames for textbook examples — Nats","text":"small data frames illustration purposes . Nats made demographic economic data, country year Big simplified form PalmerPenguin data Tiny 8-row subset Big","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Short_examples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Short, simple data frames for textbook examples — Nats","text":"","code":"Nats"},{"path":"https://dtkaplan.github.io/LSTbook/reference/Short_examples.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Short, simple data frames for textbook examples — Nats","text":"object class tbl_df (inherits tbl, data.frame) 8 rows 4 columns.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/UCB_applicants.html","id":null,"dir":"Reference","previous_headings":"","what":"Roster of applicants to six major departments at UC Berkeley — UCB_applicants","title":"Roster of applicants to six major departments at UC Berkeley — UCB_applicants","text":"Roster applicants six major departments UC Berkeley","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/UCB_applicants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Roster of applicants to six major departments at UC Berkeley — UCB_applicants","text":"","code":"data(UCB_applicants)"},{"path":"https://dtkaplan.github.io/LSTbook/reference/UCB_applicants.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Roster of applicants to six major departments at UC Berkeley — UCB_applicants","text":"data.frame object 4236 rows, one applicants graduate school UC Berkeley Fall 1973 quarter. admit: Whether applicant admitted. gender: male female dept: graduate department applied . Rather identifying actual departments involved, data released Berkeley used letter codes.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/UCB_applicants.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Roster of applicants to six major departments at UC Berkeley — UCB_applicants","text":"UCBApplicants summary table datasets R package.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/UCB_applicants.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Roster of applicants to six major departments at UC Berkeley — UCB_applicants","text":"1973, officials University California Berkeley noticed disturbing trends graduate admissions rates. data, department names redacted, presented interpretted famous paper Science, Bickel et al. 1975. paper, summary tables presented. UCB_applicants reverse engineered datasets::UCBAdmissions data table unit observation individual applicant. origin datasets::UCBAdmissions clear; data explicitly provided Bickel et al.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/UCB_applicants.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Roster of applicants to six major departments at UC Berkeley — UCB_applicants","text":"Bickel, P. J., Hammel, E. ., O'Connell, J. W. (1975). Sex bias graduate admissions: Data Berkeley. Science, 187, 398–403.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/US_wildfires.html","id":null,"dir":"Reference","previous_headings":"","what":"Monthly tallies of wildfires in the US from 2000 to 2022 — US_wildfires","title":"Monthly tallies of wildfires in the US from 2000 to 2022 — US_wildfires","text":"Records month wildfires US.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/US_wildfires.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monthly tallies of wildfires in the US from 2000 to 2022 — US_wildfires","text":"","code":"data(AAUP)"},{"path":"https://dtkaplan.github.io/LSTbook/reference/US_wildfires.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Monthly tallies of wildfires in the US from 2000 to 2022 — US_wildfires","text":"275 rows, month date year month format can easily plotted area: total area burned wildfires month (acres) number: number wildfires month month: convenience, month (Jan, Feb, ..., Dec) ordered factor.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/US_wildfires.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Monthly tallies of wildfires in the US from 2000 to 2022 — US_wildfires","text":"USGS","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Wheat.html","id":null,"dir":"Reference","previous_headings":"","what":"Experimental data on the yield of winter wheat — Wheat","title":"Experimental data on the yield of winter wheat — Wheat","text":"experiment, eight different varieties winter wheat planted 7 calendar years (1996-2002). genotype assigned randomly plot within block.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Wheat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Experimental data on the yield of winter wheat — Wheat","text":"","code":"data(\"Wheat\")"},{"path":"https://dtkaplan.github.io/LSTbook/reference/Wheat.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Experimental data on the yield of winter wheat — Wheat","text":"data.frame 240 rows genotype type wheat. yield wheat plot block Major region field plot Subdivision block wheat planted year planting measurement","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/Wheat.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Experimental data on the yield of winter wheat — Wheat","text":"Andrea Onofri \"Repeated measures perennial crops\"","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/add_plot_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Convenience function for adding labels to point_plot or others without needing\nthe ggplot2 + pipe. — add_plot_labels","title":"Convenience function for adding labels to point_plot or others without needing\nthe ggplot2 + pipe. — add_plot_labels","text":"Convenience function adding labels point_plot others without needing ggplot2 + pipe.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/add_plot_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convenience function for adding labels to point_plot or others without needing\nthe ggplot2 + pipe. — add_plot_labels","text":"","code":"add_plot_labels(P, ..., color = NULL)"},{"path":"https://dtkaplan.github.io/LSTbook/reference/add_plot_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convenience function for adding labels to point_plot or others without needing\nthe ggplot2 + pipe. — add_plot_labels","text":"P ggplot2 object, instance made point_plot() model_plot() color Name color legend (works point_plot()) ... Label items (e.g. x = \"hello\") ggplot2::labs","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/add_plot_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convenience function for adding labels to point_plot or others without needing\nthe ggplot2 + pipe. — add_plot_labels","text":"ggplot graphics object","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/add_plot_labels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convenience function for adding labels to point_plot or others without needing\nthe ggplot2 + pipe. — add_plot_labels","text":"","code":"mtcars |> point_plot(mpg ~ hp + cyl) |>   add_plot_labels(x = \"The X axis\", y = \"Vertical\", color = \"# cylinders\") #> Scale for colour is already present. #> Adding another scale for colour, which will replace the existing scale."},{"path":"https://dtkaplan.github.io/LSTbook/reference/compare_model_residuals.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare models based on the size of their residuals — compare_model_residuals","title":"Compare models based on the size of their residuals — compare_model_residuals","text":"Compare set models, response variable, using either RMS residuals sum--square residuals","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/compare_model_residuals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare models based on the size of their residuals — compare_model_residuals","text":"","code":"compare_model_residuals(   source,   ...,   n = 500,   measure = c(\"RMS\", \"SS\", \"R2\"),   testing = c(\"in-sample\", \"out-of-sample\") )"},{"path":"https://dtkaplan.github.io/LSTbook/reference/compare_model_residuals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare models based on the size of their residuals — compare_model_residuals","text":"source data frame n Sample size DAG. measure Either \"RMS\" (default) \"SS\" (sum squares) testing Character string, either \"-sample\" \"--sample\" ... One model specifications, response variable.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/compare_model_residuals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare models based on the size of their residuals — compare_model_residuals","text":"","code":"compare_model_residuals(mtcars,   mpg ~ 1, mpg ~ hp, mpg ~ hp + wt,   measure=\"SS\") #> [1] 1126.0472  447.6743  195.0478   # This won't work until cross-validation is set up # compare_model_residuals(sample(sim_07, n=100),   # c ~ 1, c ~ a, c ~ a + b, c ~ a + b + d,   # measure=\"SS\", testing=\"out-of-sample\")"},{"path":"https://dtkaplan.github.io/LSTbook/reference/construct_fitting_call.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a call for refitting a model from the model itself — construct_fitting_call","title":"Construct a call for refitting a model from the model itself — construct_fitting_call","text":"typically used end-user.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/construct_fitting_call.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a call for refitting a model from the model itself — construct_fitting_call","text":"","code":"construct_fitting_call(model, data_name = \"training\", ...)"},{"path":"https://dtkaplan.github.io/LSTbook/reference/construct_fitting_call.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a call for refitting a model from the model itself — construct_fitting_call","text":"model model question data_name character string specifying name data frame used refitting. object must defined environment call made. ... (used)","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/construct_fitting_call.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Construct a call for refitting a model from the model itself — construct_fitting_call","text":"provides way refit model either resampled sub-sampled data. model architectures support . , use model_ensemble model_cv, use bootstrap= argument functions.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/dag_draw.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw a DAG — dag_draw","title":"Draw a DAG — dag_draw","text":"Make simple drawing Directed Acyclic Graph constructed datasim_make.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/dag_draw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw a DAG — dag_draw","text":"","code":"dag_draw(DAG, ..., report_hidden = FALSE)"},{"path":"https://dtkaplan.github.io/LSTbook/reference/dag_draw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw a DAG — dag_draw","text":"DAG DAG draw report_hidden logical. TRUE, show hidden nodes. ... Additional arguments plot.igraph()","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/dag_draw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw a DAG — dag_draw","text":"return value. Called graphics side-effects.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/dag_draw.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Draw a DAG — dag_draw","text":"See igraph package details. default, edges drawn hidden nodes, , whose names begin dot. show hidden nodes, use argument show_hidden=TRUE.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/dag_draw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw a DAG — dag_draw","text":"","code":"dag_draw(sim_03)"},{"path":"https://dtkaplan.github.io/LSTbook/reference/data_from_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract training data from model — data_from_model","title":"Extract training data from model — data_from_model","text":"typically used end-user.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/data_from_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract training data from model — data_from_model","text":"","code":"data_from_model(model, ...)"},{"path":"https://dtkaplan.github.io/LSTbook/reference/data_from_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract training data from model — data_from_model","text":"model model extract training data ... additional arguments (used)","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/data_from_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract training data from model — data_from_model","text":"model architectures keep track training data model architecture recognized, add method class. See vignette.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/datasim.html","id":null,"dir":"Reference","previous_headings":"","what":"Facility to make and run data simulations — datasim_make","title":"Facility to make and run data simulations — datasim_make","text":"Facility make run data simulations","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/datasim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Facility to make and run data simulations — datasim_make","text":"","code":"datasim_make(...)  datasim_run(sim, n = 5, seed = NULL, report_hidden = FALSE)  categorical(n = 5, ..., exact = TRUE)  cat2value(variable, ...)  bernoulli(n = 0, logodds = NULL, prob = 0.5, labels = NULL)  block_by(block_var, levels = c(\"treatment\", \"control\"), show_block = FALSE)  datasim_to_igraph(sim, report_hidden = FALSE)  datasim_intervene(sim, ...)  random_levels(n, k = NULL, replace = FALSE)"},{"path":"https://dtkaplan.github.io/LSTbook/reference/datasim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Facility to make and run data simulations — datasim_make","text":"sim data simulation made datasim_make() n sample size seed Integer use random seed (optional) reproducibility report_hidden logical. TRUE, show values hidden variables (, variables whose name begins dot) exact Logical flag. TRUE, scrupulous dividing number factors variable categorical variable logodds Numerical vector used generate bernouilli trials. Can real number. prob alternative logodds. Values must [0,1]. labels Character vector: names categorical levels, also used replace 0 1 bernouilli() block_var variable use blocking levels Character vector giving names blocking levels show_block Logical. TRUE, put block number output. k Number distinct levels replace TRUE, use resampling set k levels ... assignments values names variable","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/datasim_helpers.html","id":null,"dir":"Reference","previous_headings":"","what":"Helpers for specifying nodes in simulations — categorical","title":"Helpers for specifying nodes in simulations — categorical","text":"Helpers specifying nodes simulations Mix two variables together. output specified R-squared var1 variance one. Evaluate expression separately case","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/datasim_helpers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helpers for specifying nodes in simulations — categorical","text":"","code":"categorical(n = 5, ..., exact = TRUE)  cat2value(variable, ...)  bernoulli(n = 0, logodds = NULL, prob = 0.5, labels = NULL)  mix_with(signal, noise = NULL, R2 = 0.5, var = 1, exact = FALSE)  each(ex)  block_by(block_var, levels = c(\"treatment\", \"control\"), show_block = FALSE)  random_levels(n, k = NULL, replace = FALSE)"},{"path":"https://dtkaplan.github.io/LSTbook/reference/datasim_helpers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helpers for specifying nodes in simulations — categorical","text":"n symbol standing number rows data frame generated datasim_run(). Just use n symbol; assign value. (done datasim_run().) exact TRUE, make R-squared target variance exactly specified. variable categorical variable logodds Numerical vector used generate bernouilli trials. Can real number. prob alternative logodds. Values must [0,1]. labels Character vector: names categorical levels, also used replace 0 1 bernouilli() signal part mixture correlated output. noise rest mixture. uncorrelated output specify pure noise. R2 target R-squared. var target variance. ex expression potentially involving variables. block_var variable use blocking levels Character vector giving names blocking levels show_block Logical. TRUE, put block number output. k Number distinct levels replace TRUE, use resampling set k levels ... assignments values names variable","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/datasim_helpers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helpers for specifying nodes in simulations — categorical","text":"numerical categorical vector assembled data frame datasim_run()","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/datasim_helpers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Helpers for specifying nodes in simulations — categorical","text":"datasim_make() constructs simulation can run datasim_run(). argument datasim_make() specifies one node simulation using assignment-like syntax y <- 3*x + 2 + rnorm(n). datasim helpers documented use right-hand side specification node. simplify potentially complex operations blocking, creation random categorical methods, translation categorical numerical values, etc. target R-squared variance achieved exact=TRUE sample size goes infinity.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/datasim_helpers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helpers for specifying nodes in simulations — categorical","text":"","code":"Demo <- datasim_make(   g <- categorical(n, a=2, b=1, c=0.5),   x <- cat2value(g, a=-1.7, b=0.1, c=1.2),   y <- bernoulli(logodds = x, labels=c(\"no\", \"yes\")),   z <- random_levels(n, k=4),   w <- mix_with(x, noise=rnorm(n), R2=0.75, var=1),   treatment <- block_by(w),   dice <- each(rnorm(1, sd = abs(w))) )"},{"path":"https://dtkaplan.github.io/LSTbook/reference/datasim_make.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct and modify data simulations — datasim_make","title":"Construct and modify data simulations — datasim_make","text":"Construct modify data simulations","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/datasim_make.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct and modify data simulations — datasim_make","text":"","code":"datasim_make(...)  datasim_to_igraph(sim, report_hidden = FALSE)  datasim_intervene(sim, ...)"},{"path":"https://dtkaplan.github.io/LSTbook/reference/datasim_make.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct and modify data simulations — datasim_make","text":"sim data simulation object modified. report_hidden TRUE, show hidden nodes (nodes whose names begin dot.) ... Descriptions nodes simulation, written assignment form. See details.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/datasim_make.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct and modify data simulations — datasim_make","text":"object class \"datasim\". Internally, list R assignment expressions used running simulation.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/datasim_make.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Construct and modify data simulations — datasim_make","text":"Simulations LSTbook first specified providing code node (can written terms values nodes). constructed, data can extracted simulation using datasim_run(n) generic sample(n). argument defines one node simulation. argument syntax unusual, using assignment. instance, argument y <- 3*x + rnorm(n) defines node named y. R code RHS assignment operator (, 3*x + rnorm(n) example) used datasim_run() generate y variable simulation run. Nodes defined previous arguments can used code later arguments. Helper functions mix_with(), categorical(), several others can used within node perform complex operations. Remember use commas separate arguments normal way.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/datasim_make.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct and modify data simulations — datasim_make","text":"","code":"Simple_sim <- datasim_make(x <- rnorm(n, sd=2), y <- 3*x + rnorm(n)) Simple_sim |> datasim_run(n = 5) #> # A tibble: 5 × 2 #>        x      y #>    <dbl>  <dbl> #> 1  0.361   1.32 #> 2 -6.55  -18.4  #> 3 -4.70  -14.9  #> 4 -4.01  -11.2  #> 5  1.95    7.43"},{"path":"https://dtkaplan.github.io/LSTbook/reference/datasim_run.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a datasim simulation, producing a data frame — datasim_run","title":"Run a datasim simulation, producing a data frame — datasim_run","text":"Run datasim simulation, producing data frame","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/datasim_run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a datasim simulation, producing a data frame — datasim_run","text":"","code":"datasim_run(sim, n = 5, seed = NULL, report_hidden = FALSE)"},{"path":"https://dtkaplan.github.io/LSTbook/reference/datasim_run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a datasim simulation, producing a data frame — datasim_run","text":"sim simulation object, produced datasim_make(). n size data sample pulled simulation. seed integer random number seed, reproducibility. (, use set.seed() running sim_run().) report_hidden logical. TRUE, show values hidden variables (, variables whose name begins dot)","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/datasim_run.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run a datasim simulation, producing a data frame — datasim_run","text":"data frame column node datasim object.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/each.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate an expression separately for each case — each","title":"Evaluate an expression separately for each case — each","text":"Evaluate expression separately case","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/each.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate an expression separately for each case — each","text":"","code":"each(ex)"},{"path":"https://dtkaplan.github.io/LSTbook/reference/each.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate an expression separately for each case — each","text":"ex expression potentially involving variables.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/mix_with.html","id":null,"dir":"Reference","previous_headings":"","what":"Mix two variables together. The output will have the specified R-squared\nwith var1 and variance one. — mix_with","title":"Mix two variables together. The output will have the specified R-squared\nwith var1 and variance one. — mix_with","text":"Mix two variables together. output specified R-squared var1 variance one.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/mix_with.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mix two variables together. The output will have the specified R-squared\nwith var1 and variance one. — mix_with","text":"","code":"mix_with(signal, noise = NULL, R2 = 0.5, var = 1, exact = FALSE)"},{"path":"https://dtkaplan.github.io/LSTbook/reference/mix_with.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mix two variables together. The output will have the specified R-squared\nwith var1 and variance one. — mix_with","text":"signal part mixture correlated output. noise rest mixture. uncorrelated output specify pure noise. R2 target R-squared. var target variance. exact TRUE, make R-squared target variance exactly specified.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/mix_with.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mix two variables together. The output will have the specified R-squared\nwith var1 and variance one. — mix_with","text":"target R-squared variance achieved exact=TRUE sample size goes infinity.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/model_eval.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate a model on inputs — model_eval","title":"Evaluate a model on inputs — model_eval","text":"Evaluate model inputs","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/model_eval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate a model on inputs — model_eval","text":"","code":"model_eval(   mod,   data = NULL,   ...,   skeleton = FALSE,   ncont = 3,   interval = c(\"prediction\", \"confidence\", \"none\"),   level = 0.95,   type = c(\"response\", \"link\") )"},{"path":"https://dtkaplan.github.io/LSTbook/reference/model_eval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate a model on inputs — model_eval","text":"mod model model_train(), lm() glm() data data frame inputs. missing, inputs assembled ... training data, skeleton constructed. skeleton Logical flag. TRUE, skeleton inputs created. See model_skeleton(). ncont relevant skeleton. number levels evaluate continuous variables. See  model_skeleton(). interval One \"prediction\" (default), \"confidence\", \"none\". level level construct interval (default: 0.95) type Either \"response\" (default) \"link\". Relevant glm models. format .output ... Optional vectors specifying inputs. See examples.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/model_eval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate a model on inputs — model_eval","text":"data frame. one row row input values (see data parameter). columns include explanatory variables .output --- output model corresponds explanatory value .lwr .upr bounds prediction confidence interval training data used input, .response variable .resid. Note generic name .response used, actual name model's response variable.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/model_eval.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate a model on inputs — model_eval","text":"","code":"mod <- mtcars |> model_train(mpg ~ hp + wt) model_eval(mod, hp=100, wt=c(2,3)) #>    hp wt     .lwr  .output     .upr #> 1 100  2 20.77632 26.29431 31.81231 #> 2 100  3 16.98362 22.41648 27.84934 model_eval(mod) # training data #> Using training data as input to model_eval(). #>    .response  hp    wt      .lwr   .output     .upr      .resid #> 1       21.0 110 2.620 18.152053 23.572329 28.99261 -2.57232940 #> 2       21.0 110 2.875 17.173052 22.583483 27.99391 -1.58348256 #> 3       22.8  93 2.320 19.814373 25.275819 30.73726 -2.47581872 #> 4       21.4 110 3.215 15.836451 21.265020 26.69359  0.13497989 #> 5       18.7 175 3.440 12.926266 18.327267 23.72827  0.37273336 #> 6       18.1 105 3.460 14.994498 20.473816 25.95313 -2.37381631 #> 7       14.3 245 3.570  9.993171 15.599042 21.20491 -1.29904236 #> 8       24.4  62 3.190 17.284608 22.887067 28.48953  1.51293266 #> 9       22.8  95 3.150 16.532703 21.993673 27.45464  0.80632669 #> 10      19.2 123 3.440 14.552353 19.979460 25.40657 -0.77945988 #> 11      17.8 123 3.440 14.552353 19.979460 25.40657 -2.17945988 #> 12      16.4 180 4.070 10.274249 15.725369 21.17649  0.67463146 #> 13      17.3 180 3.730 11.631452 17.043831 22.45621  0.25616901 #> 14      15.2 180 3.780 11.434088 16.849939 22.26579 -1.64993945 #> 15      10.4 205 5.250  4.579380 10.355205 16.13103  0.04479541 #> 16      10.4 215 5.424  3.530661  9.362733 15.19480  1.03726743 #> 17      14.7 230 5.345  3.414919  9.192487 14.97006  5.50751301 #> 18      32.4  66 2.200 21.087052 26.599028 32.11100  5.80097202 #> 19      30.4  52 1.615 23.691616 29.312380 34.93314  1.08761978 #> 20      33.9  65 1.835 22.484454 28.046209 33.60796  5.85379085 #> 21      21.5  97 2.465 19.143493 24.586441 30.02939 -3.08644148 #> 22      15.5 150 3.520 13.413350 18.811364 24.20938 -3.31136386 #> 23      15.2 150 3.435 13.749010 19.140979 24.53295 -3.94097947 #> 24      13.3 245 3.840  8.981473 14.552028 20.12258 -1.25202805 #> 25      19.2 175 3.845 11.335804 16.756745 22.17769  2.44325481 #> 26      27.3  66 1.935 22.083269 27.626653 33.17004 -0.32665313 #> 27      26.0  91 2.140 20.548743 26.037374 31.52601 -0.03737415 #> 28      30.4 113 1.513 22.072733 27.769769 33.46681  2.63023081 #> 29      15.8 264 3.170 10.725413 16.546489 22.36756 -0.74648866 #> 30      19.7 175 2.770 15.446364 20.925413 26.40446 -1.22541324 #> 31      15.0 335 3.570  6.476550 12.739477 19.00240  2.26052287 #> 32      21.4 109 2.780 17.570829 22.983649 28.39647 -1.58364943 model_eval(mod, skeleton=TRUE) #>      hp wt        .lwr   .output      .upr #> 1    50  0 29.33460511 35.638623 41.942640 #> 2    55  0 29.16106307 35.479758 41.798453 #> 3    60  0 28.98620890 35.320893 41.655578 #> 4    65  0 28.81005251 35.162029 41.514005 #> 5    70  0 28.63260449 35.003164 41.373723 #> 6    75  0 28.45387612 34.844299 41.234722 #> 7    80  0 28.27387930 34.685434 41.096989 #> 8    85  0 28.09262652 34.526570 40.960513 #> 9    90  0 27.91013085 34.367705 40.825279 #> 10   95  0 27.72640588 34.208840 40.691274 #> 11  100  0 27.54146570 34.049975 40.558485 #> 12  105  0 27.35532485 33.891111 40.426897 #> 13  110  0 27.16799830 33.732246 40.296494 #> 14  115  0 26.97950140 33.573381 40.167261 #> 15  120  0 26.78984986 33.414516 40.039183 #> 16  125  0 26.59905970 33.255652 39.912244 #> 17  130  0 26.40714722 33.096787 39.786427 #> 18  135  0 26.21412897 32.937922 39.661716 #> 19  140  0 26.02002170 32.779058 39.538093 #> 20  145  0 25.82484238 32.620193 39.415543 #> 21  150  0 25.62860808 32.461328 39.294048 #> 22  155  0 25.43133602 32.302463 39.173591 #> 23  160  0 25.23304351 32.143599 39.054154 #> 24  165  0 25.03374790 31.984734 38.935720 #> 25  170  0 24.83346661 31.825869 38.818272 #> 26  175  0 24.63221703 31.667004 38.701792 #> 27  180  0 24.43001657 31.508140 38.586263 #> 28  185  0 24.22688257 31.349275 38.471667 #> 29  190  0 24.02283235 31.190410 38.357988 #> 30  195  0 23.81788310 31.031545 38.245208 #> 31  200  0 23.61205196 30.872681 38.133309 #> 32  205  0 23.40535593 30.713816 38.022276 #> 33  210  0 23.19781187 30.554951 37.912091 #> 34  215  0 22.98943650 30.396087 37.802737 #> 35  220  0 22.78024639 30.237222 37.694197 #> 36  225  0 22.57025792 30.078357 37.586456 #> 37  230  0 22.35948727 29.919492 37.479497 #> 38  235  0 22.14795046 29.760628 37.373305 #> 39  240  0 21.93566327 29.601763 37.267862 #> 40  245  0 21.72264129 29.442898 37.163155 #> 41  250  0 21.50889986 29.284033 37.059167 #> 42  255  0 21.29445411 29.125169 36.955883 #> 43  260  0 21.07931894 28.966304 36.853289 #> 44  265  0 20.86350899 28.807439 36.751369 #> 45  270  0 20.64703867 28.648574 36.650110 #> 46  275  0 20.42992213 28.489710 36.549497 #> 47  280  0 20.21217330 28.330845 36.449517 #> 48  285  0 19.99380582 28.171980 36.350155 #> 49  290  0 19.77483310 28.013115 36.251398 #> 50  295  0 19.55526830 27.854251 36.153233 #> 51  300  0 19.33512431 27.695386 36.055648 #> 52  305  0 19.11441376 27.536521 35.958629 #> 53  310  0 18.89314906 27.377657 35.862164 #> 54  315  0 18.67134234 27.218792 35.766241 #> 55  320  0 18.44900547 27.059927 35.670849 #> 56  325  0 18.22615011 26.901062 35.575975 #> 57  330  0 18.00278764 26.742198 35.481608 #> 58  335  0 17.77892920 26.583333 35.387737 #> 59   50  2 22.31727530 27.882961 33.448647 #> 60   55  2 22.17006556 27.724097 33.278128 #> 61   60  2 22.02134212 27.565232 33.109122 #> 62   65  2 21.87109665 27.406367 32.941638 #> 63   70  2 21.71932203 27.247502 32.775683 #> 64   75  2 21.56601238 27.088638 32.611263 #> 65   80  2 21.41116305 26.929773 32.448383 #> 66   85  2 21.25477070 26.770908 32.287046 #> 67   90  2 21.09683323 26.612043 32.127254 #> 68   95  2 20.93734988 26.453179 31.969007 #> 69  100  2 20.77632115 26.294314 31.812307 #> 70  105  2 20.61374888 26.135449 31.657150 #> 71  110  2 20.44963616 25.976584 31.503533 #> 72  115  2 20.28398738 25.817720 31.351452 #> 73  120  2 20.11680818 25.658855 31.200902 #> 74  125  2 19.94810543 25.499990 31.051875 #> 75  130  2 19.77788722 25.341126 30.904364 #> 76  135  2 19.60616281 25.182261 30.758359 #> 77  140  2 19.43294258 25.023396 30.613850 #> 78  145  2 19.25823803 24.864531 30.470825 #> 79  150  2 19.08206170 24.705667 30.329271 #> 80  155  2 18.90442714 24.546802 30.189177 #> 81  160  2 18.72534885 24.387937 30.050525 #> 82  165  2 18.54484223 24.229072 29.913303 #> 83  170  2 18.36292353 24.070208 29.777492 #> 84  175  2 18.17960979 23.911343 29.643076 #> 85  180  2 17.99491878 23.752478 29.510038 #> 86  185  2 17.80886894 23.593613 29.378358 #> 87  190  2 17.62147935 23.434749 29.248018 #> 88  195  2 17.43276962 23.275884 29.118998 #> 89  200  2 17.24275987 23.117019 28.991279 #> 90  205  2 17.05147066 22.958155 28.864838 #> 91  210  2 16.85892295 22.799290 28.739657 #> 92  215  2 16.66513803 22.640425 28.615712 #> 93  220  2 16.47013744 22.481560 28.492983 #> 94  225  2 16.27394299 22.322696 28.371448 #> 95  230  2 16.07657663 22.163831 28.251085 #> 96  235  2 15.87806045 22.004966 28.131872 #> 97  240  2 15.67841663 21.846101 28.013786 #> 98  245  2 15.47766740 21.687237 27.896806 #> 99  250  2 15.27583495 21.528372 27.780909 #> 100 255  2 15.07294147 21.369507 27.666073 #> 101 260  2 14.86900907 21.210642 27.552276 #> 102 265  2 14.66405971 21.051778 27.439496 #> 103 270  2 14.45811527 20.892913 27.327711 #> 104 275  2 14.25119741 20.734048 27.216899 #> 105 280  2 14.04332762 20.575183 27.107039 #> 106 285  2 13.83452717 20.416319 26.998110 #> 107 290  2 13.62481707 20.257454 26.890091 #> 108 295  2 13.41421808 20.098589 26.782960 #> 109 300  2 13.20275068 19.939725 26.676698 #> 110 305  2 12.99043505 19.780860 26.571285 #> 111 310  2 12.77729106 19.621995 26.466699 #> 112 315  2 12.56333826 19.463130 26.362922 #> 113 320  2 12.34859587 19.304266 26.259935 #> 114 325  2 12.13308277 19.145401 26.157719 #> 115 330  2 11.91681748 18.986536 26.056255 #> 116 335  2 11.69981817 18.827671 25.955525 #> 117  50  4 14.15986012 20.127300 26.094739 #> 118  55  4 14.03835341 19.968435 25.898517 #> 119  60  4 13.91563671 19.809570 25.703504 #> 120  65  4 13.79168761 19.650706 25.509724 #> 121  70  4 13.66648396 19.491841 25.317198 #> 122  75  4 13.54000390 19.332976 25.125948 #> 123  80  4 13.41222589 19.174111 24.935997 #> 124  85  4 13.28312883 19.015247 24.747364 #> 125  90  4 13.15269205 18.856382 24.560072 #> 126  95  4 13.02089543 18.697517 24.374139 #> 127 100  4 12.88771943 18.538652 24.189585 #> 128 105  4 12.75314516 18.379788 24.006430 #> 129 110  4 12.61715443 18.220923 23.824692 #> 130 115  4 12.47972983 18.062058 23.644387 #> 131 120  4 12.34085478 17.903194 23.465532 #> 132 125  4 12.20051360 17.744329 23.288144 #> 133 130  4 12.05869153 17.585464 23.112237 #> 134 135  4 11.91537484 17.426599 22.937824 #> 135 140  4 11.77055086 17.267735 22.764918 #> 136 145  4 11.62420799 17.108870 22.593532 #> 137 150  4 11.47633582 16.950005 22.423674 #> 138 155  4 11.32692512 16.791140 22.255356 #> 139 160  4 11.17596790 16.632276 22.088583 #> 140 165  4 11.02345741 16.473411 21.923364 #> 141 170  4 10.86938822 16.314546 21.759704 #> 142 175  4 10.71375622 16.155681 21.597607 #> 143 180  4 10.55655861 15.996817 21.437075 #> 144 185  4 10.39779396 15.837952 21.278110 #> 145 190  4 10.23746218 15.679087 21.120712 #> 146 195  4 10.07556453 15.520222 20.964880 #> 147 200  4  9.91210363 15.361358 20.810612 #> 148 205  4  9.74708344 15.202493 20.657903 #> 149 210  4  9.58050922 15.043628 20.506747 #> 150 215  4  9.41238754 14.884764 20.357140 #> 151 220  4  9.24272623 14.725899 20.209071 #> 152 225  4  9.07153438 14.567034 20.062534 #> 153 230  4  8.89882226 14.408169 19.917516 #> 154 235  4  8.72460129 14.249305 19.774008 #> 155 240  4  8.54888403 14.090440 19.631996 #> 156 245  4  8.37168407 13.931575 19.491466 #> 157 250  4  8.19301604 13.772710 19.352405 #> 158 255  4  8.01289550 13.613846 19.214796 #> 159 260  4  7.83133892 13.454981 19.078623 #> 160 265  4  7.64836363 13.296116 18.943869 #> 161 270  4  7.46398769 13.137251 18.810515 #> 162 275  4  7.27822993 12.978387 18.678544 #> 163 280  4  7.09110980 12.819522 18.547934 #> 164 285  4  6.90264735 12.660657 18.418667 #> 165 290  4  6.71286318 12.501793 18.290722 #> 166 295  4  6.52177835 12.342928 18.164077 #> 167 300  4  6.32941433 12.184063 18.038712 #> 168 305  4  6.13579294 12.025198 17.914604 #> 169 310  4  5.94093633 11.866334 17.791731 #> 170 315  4  5.74486684 11.707469 17.670071 #> 171 320  4  5.54760705 11.548604 17.549601 #> 172 325  4  5.34917965 11.389739 17.430299 #> 173 330  4  5.14960742 11.230875 17.312142 #> 174 335  4  4.94891321 11.072010 17.195107 #> 175  50  6  5.04763215 12.371638 19.695644 #> 176  55  6  4.94079099 12.212774 19.484756 #> 177  60  6  4.83314377 12.053909 19.274674 #> 178  65  6  4.72467321 11.895044 19.065415 #> 179  70  6  4.61536184 11.736179 18.856997 #> 180  75  6  4.50519197 11.577315 18.649437 #> 181  80  6  4.39414576 11.418450 18.442754 #> 182  85  6  4.28220519 11.259585 18.236965 #> 183  90  6  4.16935209 11.100720 18.032089 #> 184  95  6  4.05556817 10.941856 17.828143 #> 185 100  6  3.94083504 10.782991 17.625147 #> 186 105  6  3.82513420 10.624126 17.423118 #> 187 110  6  3.70844712 10.465261 17.222076 #> 188 115  6  3.59075521 10.306397 17.022038 #> 189 120  6  3.47203988 10.147532 16.823024 #> 190 125  6  3.35228255  9.988667 16.625052 #> 191 130  6  3.23146470  9.829803 16.428140 #> 192 135  6  3.10956788  9.670938 16.232308 #> 193 140  6  2.98657375  9.512073 16.037572 #> 194 145  6  2.86246411  9.353208 15.843953 #> 195 150  6  2.73722097  9.194344 15.651466 #> 196 155  6  2.61082651  9.035479 15.460131 #> 197 160  6  2.48326319  8.876614 15.269965 #> 198 165  6  2.35451378  8.717749 15.080985 #> 199 170  6  2.22456135  8.558885 14.893208 #> 200 175  6  2.09338935  8.400020 14.706651 #> 201 180  6  1.96098166  8.241155 14.521329 #> 202 185  6  1.82732259  8.082290 14.337258 #> 203 190  6  1.69239695  7.923426 14.154455 #> 204 195  6  1.55619010  7.764561 13.972932 #> 205 200  6  1.41868796  7.605696 13.792705 #> 206 205  6  1.27987706  7.446832 13.613786 #> 207 210  6  1.13974461  7.287967 13.436189 #> 208 215  6  0.99827849  7.129102 13.259926 #> 209 220  6  0.85546731  6.970237 13.085007 #> 210 225  6  0.71130045  6.811373 12.911445 #> 211 230  6  0.56576810  6.652508 12.739248 #> 212 235  6  0.41886125  6.493643 12.568425 #> 213 240  6  0.27057180  6.334778 12.398985 #> 214 245  6  0.12089247  6.175914 12.230935 #> 215 250  6 -0.03018304  6.017049 12.064281 #> 216 255  6 -0.18266016  5.858184 11.899029 #> 217 260  6 -0.33654332  5.699319 11.735182 #> 218 265  6 -0.49183601  5.540455 11.572745 #> 219 270  6 -0.64854074  5.381590 11.411721 #> 220 275  6 -0.80665902  5.222725 11.252110 #> 221 280  6 -0.96619138  5.063861 11.093912 #> 222 285  6 -1.12713734  4.904996 10.937129 #> 223 290  6 -1.28949545  4.746131 10.781758 #> 224 295  6 -1.45326326  4.587266 10.627796 #> 225 300  6 -1.61843733  4.428402 10.475240 #> 226 305  6 -1.78501328  4.269537 10.324087 #> 227 310  6 -1.95298574  4.110672 10.174330 #> 228 315  6 -2.12234845  3.951807 10.025963 #> 229 320  6 -2.29309420  3.792943  9.878979 #> 230 325  6 -2.46521491  3.634078  9.733371 #> 231 330  6 -2.63870165  3.475213  9.589128 #> 232 335  6 -2.81354463  3.316348  9.446241"},{"path":"https://dtkaplan.github.io/LSTbook/reference/model_eval_fun.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper functions to evaluate models — model_eval_fun","title":"Helper functions to evaluate models — model_eval_fun","text":"used internally {LSTbook}. originally arranged S3 methods, now dispatch done \"hand\" order eliminate exported S3 methods.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/model_eval_fun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper functions to evaluate models — model_eval_fun","text":"","code":"model_eval_fun(model, data = NULL, interval = \"none\", level = 0.95, ...)"},{"path":"https://dtkaplan.github.io/LSTbook/reference/model_eval_fun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper functions to evaluate models — model_eval_fun","text":"model model object classes permitted data Usually, data table specifying inputs model. specified, training data used. interval One \"none\", \"confidence\", \"prediction\". model types support \"prediction\" even \"confidence\". level (default 0.95) confidence prediction level. Must [0,1] ... additional arguments","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/model_eval_fun.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper functions to evaluate models — model_eval_fun","text":"data frame","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/model_family.html","id":null,"dir":"Reference","previous_headings":"","what":"Check model type against model specification and data — model_family","title":"Check model type against model specification and data — model_family","text":"can used automatically determine model type determine specified model type consistent specification/data","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/model_family.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check model type against model specification and data — model_family","text":"","code":"model_family(   .data,   .tilde,   family = c(\"auto\", \"lm\", \"linear\", \"binomial\", \"poisson\", \"svm\", \"gaussian\", \"rlm\") )"},{"path":"https://dtkaplan.github.io/LSTbook/reference/model_family.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check model type against model specification and data — model_family","text":".data data frame equivalent .tilde model specification tilde expression family Requested model type, .","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/model_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Graph a model function — model_plot","title":"Graph a model function — model_plot","text":"Every model implicit function whose output response variable one explanatory variables. (Exceptionally, might explanatory variables response ~ 1.) One explanatory variables can mapped horizontal axis; can either quantitative categorical. remaining explanatory variables mapped color, facet-horizontal, facet-vertical. visual clarity, quantitative variables among remaining variables must coerced categorical, corresponding discrete set colors discrete set facets.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/model_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Graph a model function — model_plot","text":"","code":"model_plot(   mod,   nlevels = 3,   interval = c(\"confidence\", \"prediction\", \"none\"),   level = 0.95,   palette = LETTERS[1:8],   model_ink = 0.7 )"},{"path":"https://dtkaplan.github.io/LSTbook/reference/model_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Graph a model function — model_plot","text":"mod model object, made model_train(), lm(), glm() nlevels Integer. quantitative variables need converted factors color facetting, many levels factors. interval type interval draw (default: confidence) level confidence prediction level interval palette One \"\" \"F\" giving control people like see default palette model_ink density ink used draw model. (\"alpha\" know.)","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/model_skeleton.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a model to a skeleton — model_skeleton","title":"Convert a model to a skeleton — model_skeleton","text":"\"skeleton\" data frame containing \"nicely spaced\" values explanatory variables model.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/model_skeleton.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a model to a skeleton — model_skeleton","text":"","code":"model_skeleton(mod, data = NULL, ncont = 3, nfirstcont = 50)"},{"path":"https://dtkaplan.github.io/LSTbook/reference/model_skeleton.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a model to a skeleton — model_skeleton","text":"mod fitted model tilde expression describing model structure, e.g. outcome ~ vara+varb. data data frame. Relevant mod tilde expression ncont minimum number levels represent continuous variables. (levels may added \"prettify\" choices. See pretty().) nfirstcont Like ncont, first explanatory variable categorical. variable mapped horizontal axis many levels produce smooth graph. (Default: 50)","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/model_skeleton.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a model to a skeleton — model_skeleton","text":"data frame","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/model_skeleton.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a model to a skeleton — model_skeleton","text":"","code":"Model <- FEV |> model_train(FEV ~ sex + age + height) Model |> model_skeleton() #>    sex age height #> 1    F   0     40 #> 2    M   0     40 #> 3    F  10     40 #> 4    M  10     40 #> 5    F  20     40 #> 6    M  20     40 #> 7    F   0     50 #> 8    M   0     50 #> 9    F  10     50 #> 10   M  10     50 #> 11   F  20     50 #> 12   M  20     50 #> 13   F   0     60 #> 14   M   0     60 #> 15   F  10     60 #> 16   M  10     60 #> 17   F  20     60 #> 18   M  20     60 #> 19   F   0     70 #> 20   M   0     70 #> 21   F  10     70 #> 22   M  10     70 #> 23   F  20     70 #> 24   M  20     70 #> 25   F   0     80 #> 26   M   0     80 #> 27   F  10     80 #> 28   M  10     80 #> 29   F  20     80 #> 30   M  20     80"},{"path":"https://dtkaplan.github.io/LSTbook/reference/model_train.html","id":null,"dir":"Reference","previous_headings":"","what":"train a model, easily — model_train","title":"train a model, easily — model_train","text":"interface several often used model-fitting routines designed make easy construct.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/model_train.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"train a model, easily — model_train","text":"","code":"model_train(   data,   tilde,   family = c(\"auto\", \"lm\", \"linear\", \"binomial\", \"poisson\", \"rlm\") )"},{"path":"https://dtkaplan.github.io/LSTbook/reference/model_train.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"train a model, easily — model_train","text":"data Data frame use training data tilde Formula model family Character string: family model fit, e.g. \"lm\", \"binomial\", \"poisson\", \"rlm\", ...","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/model_train.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"train a model, easily — model_train","text":"object class \"model_object\". much \"lm\" \"glm\" object additional attribute training data printing method encourages use regression summary methods conf_interval(), R2(), anova_summary()","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/model_train.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"train a model, easily — model_train","text":"Since data may piped function, training data frame called simply \"data\", name first argument function. order able access training data cases, training data assigned attribute resulting model, \"training_data\".","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/model_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a model and return the model values — model_values","title":"Construct a model and return the model values — model_values","text":"One-stop shopping fit model return model output training data.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/model_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a model and return the model values — model_values","text":"","code":"model_values(data, tilde, family = c(\"linear\", \"prob\", \"counts\"))"},{"path":"https://dtkaplan.github.io/LSTbook/reference/model_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a model and return the model values — model_values","text":"data data frame containing training data. used mutate(), data hold model specification, instead tilde. tilde model specification form tilde expression family type model architecture: \"linear\", \"prob\", \"counts\"","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/model_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a model and return the model values — model_values","text":"vector (data frame) model evaluated training data. intended mainly use within mutate(), general model can used place simple reduction verbs like mean(), median()","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/model_values.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Construct a model and return the model values — model_values","text":"intended used WITHIN mutate()","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/model_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a model and return the model values — model_values","text":"","code":"mtcars |> mutate(mpg_mod = model_values(mpg ~ hp + wt)) |> select(hp, wt, mpg_mod) |> head() #>                    hp    wt  mpg_mod #> Mazda RX4         110 2.620 23.57233 #> Mazda RX4 Wag     110 2.875 22.58348 #> Datsun 710         93 2.320 25.27582 #> Hornet 4 Drive    110 3.215 21.26502 #> Hornet Sportabout 175 3.440 18.32727 #> Valiant           105 3.460 20.47382"},{"path":"https://dtkaplan.github.io/LSTbook/reference/mosaic_cull_for_do.html","id":null,"dir":"Reference","previous_headings":"","what":"Cull objects used with do() — mosaic_cull_for_do","title":"Cull objects used with do() — mosaic_cull_for_do","text":"() function facilitates easy replication randomization tests bootstrapping (among things).  Part makes particularly useful ability cull objects produced elements useful subsequent analysis. cull_for_do culling.  generic, users can add new methods either change behavior handle additional classes objects.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/mosaic_cull_for_do.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cull objects used with do() — mosaic_cull_for_do","text":"","code":"mosaic_cull_for_do(object, ...)"},{"path":"https://dtkaplan.github.io/LSTbook/reference/mosaic_cull_for_do.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cull objects used with do() — mosaic_cull_for_do","text":"object object culled ... additional arguments (currently ignored)","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/mosaic_cull_for_do.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cull objects used with do() — mosaic_cull_for_do","text":"(n) * expression evaluated, expression evaluated n times produce list n result objects. cull_for_do applied element list extract information stored.  example, applied object class \"lm\", default cull_for_do extracts coefficients, coefficient determinism, estimate variance, etc.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/mosaic_cull_for_do.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cull objects used with do() — mosaic_cull_for_do","text":"","code":"Clock_auction |> model_train(price ~ resample(bidders)) |>   R2() |> trials(times=10) #>    .trial  n k     Rsquared          F         adjR2         p df.num df.denom #> 1       1 32 1 0.0272469030 0.84030274 -0.0051782002 0.3661674      1       30 #> 2       2 32 1 0.0005793999 0.01739208 -0.0327346201 0.8959057      1       30 #> 3       3 32 1 0.0107625143 0.32638819 -0.0222120686 0.5717847      1       30 #> 4       4 32 1 0.0408865813 1.27888674  0.0089161340 0.2665108      1       30 #> 5       5 32 1 0.0314786869 0.97505403 -0.0008053569 0.3308309      1       30 #> 6       6 32 1 0.0107889079 0.32719734 -0.0221847951 0.5713109      1       30 #> 7       7 32 1 0.0053843910 0.16240619 -0.0277694626 0.6896307      1       30 #> 8       8 32 1 0.0845673859 2.77139086  0.0540529654 0.1057257      1       30 #> 9       9 32 1 0.0194090616 0.59379689 -0.0132773031 0.4466069      1       30 #> 10     10 32 1 0.0110352039 0.33475015 -0.0219302893 0.5669256      1       30"},{"path":"https://dtkaplan.github.io/LSTbook/reference/ntiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Create vector based on roughly equally sized groups — ntiles","title":"Create vector based on roughly equally sized groups — ntiles","text":"Create vector based roughly equally sized groups","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/ntiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create vector based on roughly equally sized groups — ntiles","text":"","code":"ntiles(   x,   n = 3,   format = c(\"rank\", \"interval\", \"mean\", \"median\", \"center\", \"left\", \"right\"),   digits = 3 )"},{"path":"https://dtkaplan.github.io/LSTbook/reference/ntiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create vector based on roughly equally sized groups — ntiles","text":"x numeric vector n (approximate) number quantiles format specification desired output format. One \"center\", \"interval\", \"left\", \"right\", \"mean\", \"median. digits desired number digits labeling factors.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/ntiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create vector based on roughly equally sized groups — ntiles","text":"vector.  type vector depend format.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/ntiles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create vector based on roughly equally sized groups — ntiles","text":"functional clone mosaic::ntiles order avoid dependency. removed future, need avoid dependency, e.g. {mosaic} available WASM.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/ntiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create vector based on roughly equally sized groups — ntiles","text":"","code":"FEV |> head(20) |> mutate(group = ntiles(height, 3, format=\"center\")) #> # A tibble: 20 × 6 #>      age   FEV height sex   smoker group #>    <int> <dbl>  <dbl> <chr> <chr>  <dbl> #>  1     9  1.71   57   F     not     57.2 #>  2     8  1.72   67.5 F     not     63.2 #>  3     7  1.72   54.5 F     not     52.2 #>  4     9  1.56   53   M     not     52.2 #>  5     9  1.90   57   M     not     57.2 #>  6     8  2.34   61   F     not     63.2 #>  7     6  1.92   58   F     not     57.2 #>  8     6  1.42   56   F     not     57.2 #>  9     8  1.99   58.5 F     not     57.2 #> 10     9  1.94   60   F     not     63.2 #> 11     6  1.60   53   F     not     52.2 #> 12     8  1.74   54   M     not     52.2 #> 13     8  2.19   58.5 F     not     57.2 #> 14     8  2.12   60.5 M     not     63.2 #> 15     8  2.26   58   M     not     57.2 #> 16     7  1.93   53   M     not     52.2 #> 17     5  1.47   50   M     not     52.2 #> 18     6  1.88   53   F     not     52.2 #> 19     9  2.35   59   M     not     63.2 #> 20     9  2.60   61.5 M     not     63.2 FEV |> head(20) |> mutate(group = ntiles(height, 3, format=\"interval\")) #> # A tibble: 20 × 6 #>      age   FEV height sex   smoker group     #>    <int> <dbl>  <dbl> <chr> <chr>  <ord>     #>  1     9  1.71   57   F     not    [56,58.5] #>  2     8  1.72   67.5 F     not    [59,67.5] #>  3     7  1.72   54.5 F     not    [50,54.5] #>  4     9  1.56   53   M     not    [50,54.5] #>  5     9  1.90   57   M     not    [56,58.5] #>  6     8  2.34   61   F     not    [59,67.5] #>  7     6  1.92   58   F     not    [56,58.5] #>  8     6  1.42   56   F     not    [56,58.5] #>  9     8  1.99   58.5 F     not    [56,58.5] #> 10     9  1.94   60   F     not    [59,67.5] #> 11     6  1.60   53   F     not    [50,54.5] #> 12     8  1.74   54   M     not    [50,54.5] #> 13     8  2.19   58.5 F     not    [56,58.5] #> 14     8  2.12   60.5 M     not    [59,67.5] #> 15     8  2.26   58   M     not    [56,58.5] #> 16     7  1.93   53   M     not    [50,54.5] #> 17     5  1.47   50   M     not    [50,54.5] #> 18     6  1.88   53   F     not    [50,54.5] #> 19     9  2.35   59   M     not    [59,67.5] #> 20     9  2.60   61.5 M     not    [59,67.5]"},{"path":"https://dtkaplan.github.io/LSTbook/reference/point_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"One-step data graphics — point_plot","title":"One-step data graphics — point_plot","text":"point_plot() makes easy construct informative basic graph data frame. \"Making easy\" means user needs specify two things: 1) data frame used 2) tilde expression response variable left three explanatory variables right. response variable mapped vertical axis first explanatory variable defines horizontal axis. second explanatory variable () maps color, third () defines facets. Quantitative variables used color faceting cut categorical variables, color facets always discrete.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/point_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"One-step data graphics — point_plot","text":"","code":"point_plot(   D,   tilde,   ...,   seed = 101,   annot = c(\"none\", \"violin\", \"model\", \"bw\"),   jitter = c(\"default\", \"none\", \"all\", \"x\", \"y\"),   interval = c(\"confidence\", \"none\", \"prediction\"),   point_ink = 0.5,   model_ink = 0.4,   palette = LETTERS[1:8],   bw = NULL,   level = 0.95,   nx = 50,   model_family = NULL )"},{"path":"https://dtkaplan.github.io/LSTbook/reference/point_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"One-step data graphics — point_plot","text":"D data frame tilde tilde expression specifying y ~ x y ~ x + color seed (optional) random seed jittering annot Statistical annotation (one \"none\", \"violin\", \"model\", \"bw\") jitter Options turning jitter: one \"default\", \"\", \"none\", \"x\", \"y\". default, default, categorical variables jittered. interval type interval: default \"confidence\". Others: \"none\" \"prediction\" point_ink Opacity ink data points model_ink Opacity ink model annotation palette Depending taste visual capabilities, people might prefer alter color scheme. 8 palettes available: \"\" \"H\". bw bandwidth violin plot level confidence level use (0.95) nx Number places evaluate x-axis quantitative vars. Default 50. Use higher graph smooth enough. model_family Override default model type. See model_train() ... Graphical options data points, labels, e.g. size","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/point_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"One-step data graphics — point_plot","text":"x- y- variables categorical, jittering automatically applied. Using annot = \"model\" annotate data graph model --- shown confidence intervals/bands --- corresponding tilde expression. annot = \"violin\" annotate violin plot. want use explanatory variable color faceting (might pedagogical purposes) merely repeat name color variable faceting position, e.g. mpg ~ hp + cyl + cyl.","code":""},{"path":[]},{"path":"https://dtkaplan.github.io/LSTbook/reference/point_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"One-step data graphics — point_plot","text":"","code":"mosaicData::Galton |> point_plot(height ~ mother + sex + father, annot=\"model\", model_ink=1)  mtcars |> point_plot(mpg ~ wt + cyl)  mtcars |> point_plot(mpg ~ wt + cyl + hp, annot=\"model\")"},{"path":"https://dtkaplan.github.io/LSTbook/reference/print.datasim.html","id":null,"dir":"Reference","previous_headings":"","what":"Nice printing of some internal objects — print.datasim","title":"Nice printing of some internal objects — print.datasim","text":"Nice printing internal objects","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/print.datasim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nice printing of some internal objects — print.datasim","text":"","code":"# S3 method for datasim print(x, ..., report_hidden = FALSE)"},{"path":"https://dtkaplan.github.io/LSTbook/reference/print.datasim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nice printing of some internal objects — print.datasim","text":"x data simulation made datasim_make() report_hidden Show hidden nodes (nodes whose name begins .) ... compatibility generic print()","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/print.model_object.html","id":null,"dir":"Reference","previous_headings":"","what":"A printing method for model objects — print.model_object","title":"A printing method for model objects — print.model_object","text":"printing method model objects","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/print.model_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A printing method for model objects — print.model_object","text":"","code":"# S3 method for model_object print(x, ...)"},{"path":"https://dtkaplan.github.io/LSTbook/reference/print.model_object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A printing method for model objects — print.model_object","text":"x object print ... used, consistency generic print()","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/regression_summaries.html","id":null,"dir":"Reference","previous_headings":"","what":"Summaries of regression models — conf_interval","title":"Summaries of regression models — conf_interval","text":"summaries always form data frame conf_interval() --- displays coefficients confidence intervals R2() --- R-squared model together related measures F, adjusted R-squared, p-value, degrees freedom used calculating p-value. regression_summary() -- regression report data-frame format. anova_summary() --- ANOVA report data-frame format. one model passed argument, data frame one line per model term. multiple models given arguments, ANOVA report show increments one model next.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/regression_summaries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summaries of regression models — conf_interval","text":"","code":"conf_interval(model, level = 0.95, show_p = FALSE)  R2(model)  regression_summary(model)  anova_summary(...)"},{"path":"https://dtkaplan.github.io/LSTbook/reference/regression_summaries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summaries of regression models — conf_interval","text":"model model produced model_train(), lm(), glm(), level Confidence level use conf_interval() (default: 0.95) show_p conf_interval(), append p-value report. ... One models (ANOVA)","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/regression_summaries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summaries of regression models — conf_interval","text":"data frame","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/regression_summaries.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summaries of regression models — conf_interval","text":"Many  wrappers around broom::tidy() used emphasize students results summary form regression report, similar summaries produced stats::confint(), stats::coef(), etc.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/regression_summaries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summaries of regression models — conf_interval","text":"","code":"Model <- FEV |> model_train(FEV ~ age + smoker) Model |> conf_interval() #> # A tibble: 3 × 4 #>   term           .lwr  .coef    .upr #>   <chr>         <dbl>  <dbl>   <dbl> #> 1 (Intercept)   0.207  0.367  0.527  #> 2 age           0.215  0.231  0.247  #> 3 smokersmoker -0.368 -0.209 -0.0504 Model |> R2() #>     n k  Rsquared        F     adjR2 p df.num df.denom #> 1 654 2 0.5765875 443.2539 0.5752867 0      2      651 Model |> anova_summary() #> # A tibble: 3 × 6 #>   term         df  sumsq  meansq statistic    p.value #>   <chr>     <int>  <dbl>   <dbl>     <dbl>      <dbl> #> 1 age           1 281.   281.       880.    5.54e-123 #> 2 smoker        1   2.14   2.14       6.70  9.86e-  3 #> 3 Residuals   651 208.     0.319     NA    NA"},{"path":"https://dtkaplan.github.io/LSTbook/reference/sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Samples from various kinds of objects — sample","title":"Samples from various kinds of objects — sample","text":"set methods generate random samples data frames data simulations. data frames, individual rows sampled. vectors, elements sampled.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Samples from various kinds of objects — sample","text":"","code":"sample(x, n, replace = FALSE, ...)  # S3 method for default sample(   x,   n = length(x),   replace = FALSE,   prob = NULL,   .by = NULL,   groups = .by,   orig.ids = FALSE,   ... )  resample(..., replace = TRUE)"},{"path":"https://dtkaplan.github.io/LSTbook/reference/sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Samples from various kinds of objects — sample","text":"x object sample n Size sample. replace Logical flag: whether sample replacement. (default: FALSE) prob Probabilities use sampling, one element x .Variables use define groups sampling, {dplyr}. sample size applies group. groups Variable indicating blocks sample within orig.ids Logical. TRUE, append column named \"orig.ids\" row original x came . ... Arguments pass along specific sample methods.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Samples from various kinds of objects — sample","text":"vector data frame depending nature x argument.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/sample.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Samples from various kinds of objects — sample","text":"based spirit sample functions {mosaic} package, redefined 1) avoid dependency {mosaic} 2) bring arguments line .= features {dplyr}.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/sample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Samples from various kinds of objects — sample","text":"","code":"sample(sim_03, n=5) # run a simulation #> # A tibble: 5 × 3 #>        g       x       y #>    <dbl>   <dbl>   <dbl> #> 1  0.552  1.17   -0.242  #> 2 -0.675 -0.788   0.753  #> 3  0.214  1.13   -1.25   #> 4  0.311  0.0875  0.0741 #> 5  1.17   1.70    0.981  sample(Clock_auction, n = 3) # from a data frame #> # A tibble: 3 × 3 #>     age bidders price #>   <dbl>   <dbl> <dbl> #> 1   194       5  1356 #> 2   182      11  1979 #> 3   175       8  1545 sample(1:6, n = 6) # sample from a vector #> [1] 2 5 6 4 1 3"},{"path":"https://dtkaplan.github.io/LSTbook/reference/sim_objects.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulations for use in Lessons in Statistical Thinking — sim_objects","title":"Simulations for use in Lessons in Statistical Thinking — sim_objects","text":"datasim objects provided.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/sim_objects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulations for use in Lessons in Statistical Thinking — sim_objects","text":"","code":"sim_00  sim_01  sim_02  sim_03  sim_04  sim_05  sim_06  sim_07  sim_08  sim_09  sim_10  sim_11  sim_12  sim_flights  sim_medical_observations  sim_prob_21.1  sim_satgpa  sim_school1  sim_school2  sim_vaccine"},{"path":"https://dtkaplan.github.io/LSTbook/reference/sim_objects.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulations for use in Lessons in Statistical Thinking — sim_objects","text":"object class list (inherits datasim) length 2. object class list (inherits datasim) length 2. object class list (inherits datasim) length 2. object class list (inherits datasim) length 2. object class list (inherits datasim) length 2. object class list (inherits datasim) length 2. object class list (inherits datasim) length 2. object class list (inherits datasim) length 2. object class list (inherits datasim) length 2. object class list (inherits datasim) length 2. object class list (inherits datasim) length 2. object class list (inherits datasim) length 2. object class list (inherits datasim) length 2. object class list (inherits datasim) length 2. object class list (inherits datasim) length 2. object class list (inherits datasim) length 2. object class list (inherits datasim) length 2. object class list (inherits datasim) length 2. object class list (inherits datasim) length 2. object class list (inherits datasim) length 2.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/sim_objects.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulations for use in Lessons in Statistical Thinking — sim_objects","text":"defined sim_library.R file inst/","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/split_tilde.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate a tilde expression on a data frame — split_tilde","title":"Evaluate a tilde expression on a data frame — split_tilde","text":"Evaluate tilde expression data frame","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/split_tilde.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate a tilde expression on a data frame — split_tilde","text":"","code":"split_tilde(tilde)"},{"path":"https://dtkaplan.github.io/LSTbook/reference/split_tilde.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate a tilde expression on a data frame — split_tilde","text":"tilde two-sided tilde expression used model specification","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/statistical_annotations.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a slope ","title":"Add a slope ","text":"guide reader quantifying slope components x-y graph, \"slope rose\" helpful. Several radiating lines drawn, marked numerical slope. suitable choice slopes made automatically, based x- y- scale plot.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/statistical_annotations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a slope ","text":"","code":"add_slope_rose(   P,   x = NULL,   y = NULL,   scale = 1/4,   color = \"red\",   keepers = c(\"both\", \"pos\", \"neg\") )  add_violin_ruler(   P,   x = NULL,   y = NULL,   width = 1/10,   ticks = seq(0, 1, by = 0.1),   ... )"},{"path":"https://dtkaplan.github.io/LSTbook/reference/statistical_annotations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a slope ","text":"P ggplot2 object made ggplot2 ggformula packages x x-position rose. assigned automatically x specified. y y-position rose, just like x. scale size rose fraction plot area covered (default 1/4) color text string (e.g. \"blue\") rose keepers whether show \"\" positive negative slopes just show \"pos\" \"neg\" width rulers, distance tick marks (native units, categories separated distance 1.) ticks Integers, typically 0:5, label ticks. ... additional graphical parameters, e.g. color = \"blue\"","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/statistical_annotations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a slope ","text":"ggplot graphics object","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/statistical_annotations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a slope ","text":"ruler, x gives position root ruler, rest ruler moving left. (vertically oriented rulers, use negative width.)","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/statistical_annotations.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Add a slope ","text":"Use pipe operator send previously made plot rose added. use {ggplot2} + connector.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/statistical_annotations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a slope ","text":"","code":"mtcars |> point_plot(mpg ~ hp, annot=\"model\") |> add_slope_rose()  mtcars |> point_plot(wt ~ hp) |> add_slope_rose(keepers=\"pos\", color=\"blue\", x=100, scale=.5 )"},{"path":"https://dtkaplan.github.io/LSTbook/reference/trials.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the left side of the pipeline multiple times. — trials","title":"Run the left side of the pipeline multiple times. — trials","text":"Write pipeline perform calculation whose result can coerced one line data frame. Add trials(times=3) end pipeline order repeat calculation multiple times. Typically, trial involves random component, another (additional) capability parameterize pipeline expression including unbound variable , e.g. lambda. call trials(lambda=c(10,20)) repeat calculation elements named parameter.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/trials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the left side of the pipeline multiple times. — trials","text":"","code":"trials(.ex, times = 1, ...)"},{"path":"https://dtkaplan.github.io/LSTbook/reference/trials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the left side of the pipeline multiple times. — trials","text":".ex (user-facing.) left side pipeline. times number times run trial. ... Values unbound parameter left side pipeline. vector length > 1, trials run separately element vector.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/trials.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run the left side of the pipeline multiple times. — trials","text":"dataframe one row trial. (see ... argument.)","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/trials.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run the left side of the pipeline multiple times. — trials","text":"intended pipeline friendly replacement mosaic::().","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/trials.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run the left side of the pipeline multiple times. — trials","text":"","code":"mean(rnorm(10)) |> trials(times=3) #> New names: #> • `` -> `...2` #> New names: #> • `` -> `...2` #> New names: #> • `` -> `...2` #>   .trial         ...2 #> 1      1  0.195557925 #> 2      2 -0.358358647 #> 3      3  0.008935456 mean(rnorm(lambda)) |> trials(lambda=c(1, 100, 10000)) #> New names: #> • `` -> `...3` #> New names: #> • `` -> `...3` #> New names: #> • `` -> `...3` #>   .trial lambda         ...3 #> 1      1      1  1.007865750 #> 2      1    100 -0.066747849 #> 3      1  10000  0.006162709 mean(rnorm(lambda)) |> trials(times=5, lambda=c(1, 100, 10000)) #> New names: #> • `` -> `...3` #> New names: #> • `` -> `...3` #> New names: #> • `` -> `...3` #> New names: #> • `` -> `...3` #> New names: #> • `` -> `...3` #> New names: #> • `` -> `...3` #> New names: #> • `` -> `...3` #> New names: #> • `` -> `...3` #> New names: #> • `` -> `...3` #> New names: #> • `` -> `...3` #> New names: #> • `` -> `...3` #> New names: #> • `` -> `...3` #> New names: #> • `` -> `...3` #> New names: #> • `` -> `...3` #> New names: #> • `` -> `...3` #>    .trial lambda         ...3 #> 1       1      1  0.056373446 #> 2       2      1 -1.246264472 #> 3       3      1  0.188988127 #> 4       4      1 -0.752384639 #> 5       5      1  0.661741495 #> 6       1    100  0.178970252 #> 7       2    100  0.051135235 #> 8       3    100  0.013606658 #> 9       4    100  0.020965758 #> 10      5    100  0.040333309 #> 11      1  10000  0.002462381 #> 12      2  10000  0.007751799 #> 13      3  10000  0.007810626 #> 14      4  10000 -0.009780755 #> 15      5  10000  0.018391817 sample(mtcars, n=lambda, replace=TRUE) |> select(mpg, hp) |>   model_train(mpg ~ resample(hp)) |>   regression_summary() |> trials(times=3, lambda=c(10, 20, 40)) |>   filter(term == \"resample(hp)\") #> Warning: The `tidy()` method for objects of class `model_object` is not maintained by the broom team, and is only supported through the `lm` tidier method. Please be cautious in interpreting and reporting broom output. #>  #> This warning is displayed once per session. #>   .trial lambda         term     estimate  std.error  statistic    p.value #> 1      1     10 resample(hp)  0.012597995 0.01795724  0.7015554 0.50285102 #> 2      2     10 resample(hp)  0.030261467 0.02511576  1.2048796 0.26268019 #> 3      3     10 resample(hp) -0.041730533 0.03982042 -1.0479682 0.32527933 #> 4      1     20 resample(hp)  0.012090463 0.02078032  0.5818228 0.56790213 #> 5      2     20 resample(hp)  0.003021334 0.01859688  0.1624645 0.87274999 #> 6      3     20 resample(hp) -0.013214974 0.02288540 -0.5774413 0.57079438 #> 7      1     40 resample(hp)  0.034207337 0.01353217  2.5278528 0.01575414 #> 8      2     40 resample(hp) -0.002350105 0.01204203 -0.1951586 0.84630856 #> 9      3     40 resample(hp) -0.030200397 0.01217559 -2.4804048 0.01766836"},{"path":"https://dtkaplan.github.io/LSTbook/reference/utils.html","id":null,"dir":"Reference","previous_headings":"","what":"Utilities — explanatory_vars","title":"Utilities — explanatory_vars","text":"Functions pulling various components model objects. work mainly lm glm objects. future project add facilities object types.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/utils.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utilities — explanatory_vars","text":"","code":"explanatory_vars(model, ...)  response_var(model, ...)  response_values(model, ...)  formula_from_mod(model, ...)  get_training_data(model, ...)"},{"path":"https://dtkaplan.github.io/LSTbook/reference/utils.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utilities — explanatory_vars","text":"model model question ... (used)","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/zero_one.html","id":null,"dir":"Reference","previous_headings":"","what":"Zero-one transformation for categorical variable — zero_one","title":"Zero-one transformation for categorical variable — zero_one","text":"convenience function handling categorical response variables. Ordinarily, ggplot2 maps categorical levels numerical values 1, 2, .... numerical mapping inappropriate logistic modeling, want levels probability scale.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/zero_one.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Zero-one transformation for categorical variable — zero_one","text":"","code":"zero_one(x, one)  label_zero_one(P)"},{"path":"https://dtkaplan.github.io/LSTbook/reference/zero_one.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Zero-one transformation for categorical variable — zero_one","text":"x categorical variable one character string specifying level gets mapped 1. P ggplot2 object made model_plot() point_plot()","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/zero_one.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Zero-one transformation for categorical variable — zero_one","text":"numerical vector 0s 1s.","code":""},{"path":"https://dtkaplan.github.io/LSTbook/reference/zero_one.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Zero-one transformation for categorical variable — zero_one","text":"","code":"Birdkeepers |>   point_plot(zero_one(LC, one=\"LungCancer\") ~ AG + BK, annot = \"model\")   Birdkeepers |>   mutate(Condition = zero_one(LC, one = \"LungCancer\")) |>   point_plot(Condition ~ AG + BK, annot = \"model\") |>   label_zero_one() |>   add_plot_labels(x=\"age\", color = \"Birdkeeper?\") #> Scale for colour is already present. #> Adding another scale for colour, which will replace the existing scale."},{"path":"https://dtkaplan.github.io/LSTbook/news/index.html","id":"lstbook-050","dir":"Changelog","previous_headings":"","what":"LSTbook 0.5.0","title":"LSTbook 0.5.0","text":"First CRAN release","code":""}]
